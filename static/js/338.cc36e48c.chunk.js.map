{"version":3,"file":"static/js/338.cc36e48c.chunk.js","mappings":"0KAEO,MAAMA,EAAqBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2sDAC/BC,GAASA,EAAMC,OAmCPD,GAASA,EAAME,sBAIfF,GAASA,EAAMG,uBAKfH,GAASA,EAAMI,sB,gBC7CpC,MAcA,EAd0BR,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0MAMnBC,GAASA,EAAMK,c,gCCHhC,MAAMC,GAAaC,EAAAA,EAAAA,OAAMP,IACrB,MAAM,UACFQ,EAAS,WACTC,EAAU,KACVC,EAAI,QACJC,GACAX,GAEGY,EAASC,IAAcC,EAAAA,EAAAA,UAASJ,GAEvC,OACIK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAACC,EAAiB,CACdd,YAAcI,GAAc,SAAUQ,SAAA,EAEtCF,EAAAA,EAAAA,KAACK,EAAAA,EAAI,CACDZ,UAAWA,IAAa,EACxBa,SAAWC,GAAQT,EAAWS,GAC9BC,MACgB,OAAZX,EACMA,EACA,EAEVY,KAAMb,GAAW,GACjBc,cAAc,iBAGF,OAAZb,GACMG,EAAAA,EAAAA,KAAA,QAAAE,SAAkB,EAAVL,KACRG,EAAAA,EAAAA,KAAA,QAAAE,SAAQ,QAGvB,IAIXX,EAAWoB,UAAY,CACnBlB,UAAWmB,IAAAA,KACXlB,WAAYkB,IAAAA,OACZjB,KAAMiB,IAAAA,OAAiBC,WACvBjB,QAASgB,IAAAA,QAGb,U,4CCvCA,MAyEA,GAzEoBpB,EAAAA,EAAAA,OAAMP,IAAW,IAAD6B,EAAAC,EAAAC,EAChC,MAAM,KACFC,EAAI,IACJC,GACAjC,EAEEkC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAiBC,EAAAA,EAAAA,cAAaC,IAChCJ,GAASK,EAAAA,EAAAA,GAAuBD,IAChCN,EAAS,UAAU,GAEpB,CAACF,IAEJ,OACIjB,EAAAA,EAAAA,KAAC2B,EAAAA,SAAQ,CAAAzB,UACLF,EAAAA,EAAAA,KAACpB,EAAkB,CACfO,qBAAyB,OAAJ8B,QAAI,IAAJA,GAAW,QAAPH,EAAJG,EAAMW,aAAK,IAAAd,OAAP,EAAJA,EAAae,QAAS,UAC3CzC,sBAA0B,OAAJ6B,QAAI,IAAJA,GAAY,QAARF,EAAJE,EAAMa,cAAM,IAAAf,OAAR,EAAJA,EAAcc,QAAS,UAC7CxC,qBAAyB,OAAJ4B,QAAI,IAAJA,GAAW,QAAPD,EAAJC,EAAMc,aAAK,IAAAf,OAAP,EAAJA,EAAaa,QAAS,UAC3C3C,KAAMgC,EAAIhB,UAEVC,EAAAA,EAAAA,MAAA,OAAK6B,UAAU,qBAAoB9B,SAAA,EAC/BF,EAAAA,EAAAA,KAACiC,EAAAA,EAAQ,CACLC,UAAQ,EACRC,QAAM,EAAAjC,SAGE,OAAJe,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,UAAUC,KAAIC,IAEZtC,EAAAA,EAAAA,KAAA,OACIgC,UAAU,qBAEVO,QAASA,IAAMhB,EAAmB,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,WAAWlC,UAE/CF,EAAAA,EAAAA,KAAA,OACIwC,IAAU,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOG,SACZC,IAAI,6CALHJ,EAAMK,SAY/B3C,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,qBAAoB9B,SAClCe,EAAKW,SAENzB,EAAAA,EAAAA,MAAA,OAAK6B,UAAU,sBAAqB9B,SAAA,CAC/Be,EAAK2B,KAAKC,MAAM,EAAG,IAAI,UAE5B1C,EAAAA,EAAAA,MAAA,OAAK6B,UAAU,qBAAoB9B,SAAA,CAAC,IAC9Be,EAAKc,MAAM,WAEjB/B,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,oBAAmB9B,UAC9BF,EAAAA,EAAAA,KAACT,EAAU,CACPE,WAAW,EACXC,WAAY,SACZC,KAAMsB,EAAKtB,KACXC,QAAS,aAKlB,G,uGCvEnB,MAIA,EAJsBf,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,Y,4CCAhC,MAsCA,EAtC4BH,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iwB,aCItC,MAAM8D,GAAetD,EAAAA,EAAAA,OAAMP,IACvB,MAAM,YACF8D,GACA9D,GAEG+D,EAAiBC,IAAsBlD,EAAAA,EAAAA,UAAS,IAcvD,OACIC,EAAAA,EAAAA,KAACkD,EAAmB,CAAAhD,UAChBF,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,gBAAe9B,SAEtB6C,EAAYF,MAAM,EAAG,GAAGR,KAAI,CAACc,EAAMC,KAE3BpD,EAAAA,EAAAA,KAAA,OAEIgC,UACIqB,IACI,qBACA,CACI,OAAUL,EAAgBM,SAAa,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMA,QAGrDZ,QACIA,IA5BKgB,KACjC,MAAMC,EAAW,IAAIR,GACrB,GAAIQ,EAASF,SAASC,GAAW,CAE7B,MAAMH,EAAQI,EAASC,QAAQF,GAC/BC,EAASE,OAAON,EAAO,EAC3B,MACII,EAASG,KAAKJ,GAElBN,EAAmBO,EAAS,EAmBMI,CAAgC,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMA,MAC3CjD,SAGGiD,EAAKA,MAbA,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMR,SAoBb,IAI9BG,EAAanC,UAAY,CACrBoC,YAAanC,IAAAA,OAGjB,U,MC1DA,MAoBA,EApB0B/B,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6Y,cCIpC,MAoCA,GApCmBQ,EAAAA,EAAAA,OAAK,KAEpB,MAAM,WAACqE,EAAU,UAAEC,IAAaC,EAAAA,EAAAA,KAAYC,IACjC,CACHH,WAAYG,EAAMC,OAAOJ,WACzBC,UAAWE,EAAMC,OAAOH,aAE7BI,EAAAA,KAEIhD,EAAKiD,IAAUpE,EAAAA,EAAAA,UAAS,OAM/B,OALAqE,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAcC,OAAOD,WACPF,EAApBE,EAAc,IAAa,MAAgB,MAAM,GAClD,KAGClE,EAAAA,EAAAA,MAACoE,EAAiB,CAAArE,SAAA,EACdF,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,sBAAqB9B,SAE5B2D,EAAWxB,KAAKpB,IACLjB,EAAAA,EAAAA,KAACwE,EAAAA,EAAW,CACfvD,KAAMA,EACNC,IAAKA,GACAD,EAAK0B,QAOtBmB,IAAa9D,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,wBAEhB,I,gBCpC5B,MAUA,EAVgCnD,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0L,wBCQnC,SAASyF,EAAiBZ,GAC7B,MAAO,CACHa,KAAMC,EAAAA,GACNd,aAER,CAEO,SAASe,EAAgBd,GAC5B,MAAO,CACHY,KAAMC,EAAAA,GACNb,YAER,CAEO,SAASe,EAAiBC,GAC7B,MAAO,CACHJ,KAAMC,EAAAA,GACNG,aAER,CAIO,MAAMC,EAAkB,SAC3BC,GAGE,IAFFC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAE,EACNG,EAAQH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAEX,OAAOI,MAAOjE,EAAUkE,KAEpBC,QAAQC,IAAIR,GACZ5D,EAtCD,SAA2BqE,GAC9B,MAAO,CACHhB,KAAMC,EAAAA,GACNe,cAER,CAiCiBC,CAAkBV,IAC3B5D,EAASuD,GAAgB,IACzB,MAAMc,EAAcH,IAAWtB,OAAOyB,YAChCE,QC1CP,WAAiD,IAA1BX,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGG,EAAQH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC/C,OAAOW,EAAAA,EAAWC,IAAI,CAClBC,IAAK,eACLC,OAAQ,CACJf,OACAI,aAGZ,CDkC0BY,CAAcP,EAAaL,GAC7C,GAAIO,EAAK,CACL,MAAM,WAAC/B,GAAc+B,EAAInE,KACzBJ,EAASoD,EAAiBZ,IAC1BxC,EAASwD,EAA2B,OAAVhB,QAAU,IAAVA,OAAU,EAAVA,EAAYsB,QAC1C,KAAO,CAGH9D,EAASoD,EADUO,EAAWnC,MAAMwC,EAAWK,EAAaL,GAAYK,EAAc,MAEtFrE,EAASwD,EAA2B,OAAVG,QAAU,IAAVA,OAAU,EAAVA,EAAYG,QAC1C,CACA9D,EAASuD,GAAgB,GAAO,CAExC,EEjDMsB,GAAmB1G,EAAAA,EAAAA,OAAMP,IAC3B,MAAM,UACFkH,GACAlH,GAEE,WACF6F,EAAU,YACVY,EAAW,WACX7B,IACAE,EAAAA,EAAAA,KAAaC,IACN,CACHc,WAAYd,EAAMC,OAAOa,WACzBY,YAAa1B,EAAMC,OAAOyB,YAC1B7B,WAAYG,EAAMC,OAAOJ,eAI3BuC,EAAaV,EAAc7B,EAAWsB,OAAS,EAC/CkB,GAAYX,EAAc,GAAK7B,EAAWsB,OAE1C9D,GAAWC,EAAAA,EAAAA,MAMjB,OACItB,EAAAA,EAAAA,KAACsG,EAAuB,CAAApG,UACpBC,EAAAA,EAAAA,MAAA,OAAK6B,UAAU,oBAAmB9B,SAAA,EAC9BF,EAAAA,EAAAA,KAACuG,EAAAA,EAAU,CACPC,MAAM,SACNC,YAAa,EACbC,MAAO5B,EACP6B,gBAAiB,CAAC9C,EAAWsB,QAAU,IACvCyB,gBAAiB/C,EAAWsB,QAAU,GACtC0B,YAAY,EACZvG,SAAUA,CAAC2E,EAAMI,IAfjC,SAA0BJ,EAAMI,GAC5Bf,OAAOwC,SAAS,EAAG,GACnBzF,EAAS0D,EAAgBoB,EAAWlB,EAAO,EAAGI,GAClD,CAY8C0B,CAAiB9B,EAAMI,MAEzDlF,EAAAA,EAAAA,MAAA,OAAK6B,UAAU,yBAAwB9B,SAAA,CAAC,SAClCkG,EAAW,IAAEC,EAAS,gBAAIvB,EAAW,4BAGzB,IAIlCoB,EAAiBvF,UAAY,CACzBwF,UAAWvF,IAAAA,MAAgBC,YAG/B,UCbA,GAnCerB,EAAAA,EAAAA,OAAK,KAChB,MAAM,MAAEwE,IAAUgD,EAAAA,EAAAA,OACZ,YAAEjE,EAAW,SAAEkE,GAAajD,GAAS,CAAC,EAEtC3C,GAAWC,EAAAA,EAAAA,OAEV4F,EAAkBC,IAAuBpH,EAAAA,EAAAA,UAAS,IAgBzD,OAbAqE,EAAAA,EAAAA,YAAU,KACN+C,EAAoBpE,EAAY,GAEjC,CACCA,EACAkE,KAGJ7C,EAAAA,EAAAA,YAAU,KACN/C,EAAS0D,EAAgBkC,GAAU,GAEpC,CAAC5F,EAAU0B,KAGV5C,EAAAA,EAAAA,MAACiH,EAAa,CAAAlH,SAAA,EACVF,EAAAA,EAAAA,KAAC8C,EAAY,CACTC,YAAamE,KAEjBlH,EAAAA,EAAAA,KAACgF,EAAU,KACXhF,EAAAA,EAAAA,KAACkG,EAAgB,CACbC,UAAWc,MAEH,G","sources":["components/section-item/style/style.js","base-ui/ant-jzh-rate/style.js","base-ui/ant-jzh-rate/index.jsx","components/section-item/index.jsx","views/entire/style.js","views/entire/childrenComponet/entire-filter/style/style.js","views/entire/childrenComponet/entire-filter/index.jsx","views/entire/childrenComponet/entire-list/style/style.js","views/entire/childrenComponet/entire-list/index.jsx","views/entire/childrenComponet/entire-pagination/style/style.js","store/modules/entire/createActions.js","services/modules/entire.js","views/entire/childrenComponet/entire-pagination/index.jsx","views/entire/index.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionItemWrapper = styled.div`\n    width: ${props => props.$avg};\n    padding: 8px;\n    box-sizing: border-box;\n\n    .section-item-inner {\n        width: 100%;\n\n        .section-item-cover {\n            position: relative;\n            box-sizing: border-box;\n            padding: 100% 8px 0;  // 这个时候就创建了一个为正方形的卡片以及宽度\n            border-radius: 4px;\n            overflow: hidden;\n            margin: 10px 0;\n            transition: all 0.5s ease;\n\n            img {\n                position: absolute;\n                left: 0;\n                top: 0;\n                width: 100%;\n                height: 100%;\n                text-align: center;\n                object-fit: cover;\n            }\n\n            @media (max-width: 768px) {\n                .section-item-cover {\n                    box-shadow: 0 4px 8px 0 rgba(77, 76, 76, 0.15);\n                    transform: translate3d(0, 0, -5px);\n                }\n            }\n        }\n\n        .section-item-title {\n            color: ${props => props.$ItemTextTitleColor};\n        }\n\n        .section-item-detail {\n            color: ${props => props.$ItemTextDetailColor};\n            text-overflow: ellipsis;\n        }\n\n        .section-item-price {\n            color: ${props => props.$ItemTextPriceColor};\n        }\n        \n        .section-item-rate {\n        }\n    }\n\n    &:hover {\n        cursor: pointer;\n\n        .section-item-cover {\n            box-shadow: 0 8px 8px 0 rgba(77, 76, 76, 0.2), \n                        0 20px 20px 0 rgba(77, 76, 76, 0.2);\n            transform: translate3d(0, 0 , 10px);\n        }\n    }\n\n    @media (max-width: 768px) {\n        width: 50%\n    }\n    \n    @media (max-width: 420px) {\n        width: 100%;\n    }\n`","import styled from \"styled-components\";\n\nconst AntJzhRateWrapper = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-content: center;\n    \n    .ant-jzh-rate {\n        color: ${props => props.$ThemeColor}\n    }\n    \n    span {\n        text-align: center;\n    }\n`\n\nexport default AntJzhRateWrapper","import { Rate } from \"antd\";\nimport { memo, useState } from \"react\";\nimport AntJzhRateWrapper from \"./style\"\nimport PropTypes from \"prop-types\";\n\nconst AntJzhRate = memo((props) => {\n    const {\n        allowHalf,\n        ThemeColor,\n        rate,\n        starNum\n    } = props\n\n    const [antRate, setAntRate] = useState(rate)\n\n    return (\n        <>\n            <AntJzhRateWrapper\n                $ThemeColor={ ThemeColor || \"yellow\" }\n            >\n                <Rate\n                    allowHalf={allowHalf || true}\n                    onChange={(num) => setAntRate(num)}\n                    value = {\n                        antRate !== null\n                            ? antRate\n                            : 0\n                    }\n                    star={starNum || 10}\n                    rootClassName=\"ant-jzh-rate\"\n                />\n                {\n                    antRate !== null\n                        ? <span>{ antRate * 2 }</span>\n                        : <span>{ 0 }</span>\n                }\n            </AntJzhRateWrapper>\n        </>\n    )\n})\n\nAntJzhRate.prototype = {\n    allowHalf: PropTypes.bool,\n    ThemeColor: PropTypes.string,\n    rate: PropTypes.number.isRequired,\n    starNum: PropTypes.number,\n}\n\nexport default AntJzhRate","import {Fragment, memo, useCallback} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {SectionItemWrapper} from \"./style/style\";\nimport AntJzhRate from \"../../base-ui/ant-jzh-rate\";\nimport {Carousel} from \"antd\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {changeDetailInfoAction} from \"../../store/modules/detail\";\n\nconst SectionItem = memo((props) => {\n    const {\n        item,\n        avg\n    } = props\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    // eslint-disable-next-line\n    const ToDetailHandle = useCallback((data) => {\n        dispatch(changeDetailInfoAction(data))\n        navigate(\"/detail\")\n        // eslint-disable-next-line\n    }, [item])\n\n    return (\n        <Fragment>\n            <SectionItemWrapper\n                $ItemTextTitleColor={item?.title?.color || \"#46413e\" }\n                $ItemTextDetailColor={item?.detail?.color || \"#675e4e\" }\n                $ItemTextPriceColor={item?.price?.color || \"#be5555\" }\n                $avg={avg}\n            >\n                <div className=\"section-item-inner\">\n                    <Carousel\n                        autoplay\n                        arrows\n                    >\n                        {\n                            item?.imageList.map(imgEl => {\n                                return (\n                                    <div\n                                        className=\"section-item-cover\"\n                                        key={imgEl.id}\n                                        onClick={() => ToDetailHandle(item?.imageList)}\n                                    >\n                                        <img\n                                            src={imgEl?.imageUrl}\n                                            alt=\"图片正在加载...\"\n                                        />\n                                    </div>\n                                )\n                            })\n                        }\n                    </Carousel>\n                    <div className=\"section-item-title\">\n                    {item.title}\n                    </div>\n                    <div className=\"section-item-detail\">\n                        {item.desc.slice(0, 20)}...\n                    </div>\n                    <div className=\"section-item-price\">\n                        ${item.price}/day\n                    </div>\n                    <div className=\"section-item-rate\">\n                        <AntJzhRate\n                            allowHalf={true}\n                            ThemeColor={\"orange\"}\n                            rate={item.rate}\n                            starNum={10}\n                        />\n                    </div>\n                </div>\n            </SectionItemWrapper>\n        </Fragment>\n    )\n})\n\nSectionItem.propTypes = {\n    item: PropTypes.object,\n    avg: PropTypes.string\n}\n\nexport default SectionItem","import styled from \"styled-components\";\n\nconst EntireWrapper = styled.div`\n\n`\n\nexport default EntireWrapper","import styled from \"styled-components\"\n\nconst EntireFilterWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    height: auto;\n    padding: 20px 16px 10px;\n    \n    margin-bottom: 20px;\n    background: #f4f8fa;\n\n    position: fixed;\n    z-index: 10;\n    left: 0;\n    right: 0;\n    top: 80px;\n\n    border-bottom: 1px solid #b2adad;\n\n    .entire-filter {\n        display: flex;\n        flex-shrink: 0;\n\n        .entire-filter-card {\n            margin: 0 4px 0 8px;\n            padding: 6px 12px;\n            border: 1px solid #dce0e0;\n            border-radius: 4px;\n            color: #484848;\n            cursor: pointer;\n\n            &.active {\n                background: #008489;\n                border: 1px solid #008499;\n                color: #ffffff;\n            }\n        }\n    }\n`\n\nexport default EntireFilterWrapper","import {memo, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport EntireFilterWrapper from \"./style/style\";\n\nconst EntireFilter = memo((props) => {\n    const {\n        filterCards\n    } = props\n\n    const [selectCardNames, setSelectCardNames] = useState([])\n\n    const EntireFilterCardClickHandle = (cardName) => {\n        const newItems = [...selectCardNames]\n        if (newItems.includes(cardName)) {\n            // 移除元素的通用操作\n            const index = newItems.indexOf(cardName)\n            newItems.splice(index, 1)\n        } else {\n            newItems.push(cardName)\n        }\n        setSelectCardNames(newItems)\n    }\n\n    return (\n        <EntireFilterWrapper>\n            <div className=\"entire-filter\">\n                {\n                    filterCards.slice(0, 8).map((card, index) => {\n                        return (\n                            <div\n                                key={card?.id}\n                                className={\n                                    classNames(\n                                        \"entire-filter-card\",\n                                        {\n                                            \"active\": selectCardNames.includes(card?.card)\n                                        }\n                                    )}\n                                onClick={\n                                    () => EntireFilterCardClickHandle(card?.card)\n                                }\n                            >\n                                {\n                                    card.card\n                                }\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </EntireFilterWrapper>\n    )\n})\n\nEntireFilter.prototype = {\n    filterCards: PropTypes.array\n}\n\nexport default EntireFilter","import styled from \"styled-components\"\n\nconst EntireListWrapper = styled.div`\n    position: relative;\n    .entire-list-content {\n        width: 100%;\n        display: flex;\n        flex-wrap: wrap;\n        margin-top: 70px;\n        padding: 20px 50px;    \n    }\n    \n    .entire-list-cover {\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        background-color: rgba(255, 255, 255, 0.8);\n    }\n`\n\nexport default EntireListWrapper","import {memo, useEffect, useState} from \"react\";\nimport {shallowEqual, useSelector} from \"react-redux\";\n\nimport EntireListWrapper from \"./style/style\";\nimport SectionItem from \"../../../../components/section-item\";\n\nconst EntireList = memo(() => {\n    // 开始展示我们的数据\n    const {entireList, isLoading} = useSelector(state => {\n        return {\n            entireList :state.entire.entireList,\n            isLoading :state.entire.isLoading\n        }\n    }, shallowEqual)\n\n    const [avg, setAvg] = useState(\"25%\")\n    useEffect(() => {\n        const innerWidth  = window.innerWidth\n        innerWidth  > 375 ? setAvg(\"25%\") : setAvg(\"50%\")\n    }, []);\n\n    return (\n        <EntireListWrapper>\n            <div className=\"entire-list-content\">\n                {\n                    entireList.map((item) => {\n                        return <SectionItem\n                            item={item}\n                            avg={avg}\n                            key={item.id}\n                        />\n                    })\n                }\n            </div>\n\n            {\n                isLoading && <div className=\"entire-list-cover\"></div>\n            }\n        </EntireListWrapper>\n    )\n})\n\nexport default EntireList","import styled from \"styled-components\"\n\nconst EntirePaginationWrapper = styled.div`\n    .entire-pagination {\n        display: flex;\n        flex-flow: column nowrap;\n        justify-content: center;\n        align-items: center;\n        gap: 20px;\n    }\n`\n\nexport default EntirePaginationWrapper","import * as ActionTypes from \"./constants\"\nimport {getEntireData} from \"../../../services/modules/entire\";\n\nexport function changeCurrentPage(currentPage) {\n    return {\n        type: ActionTypes.CHANGE_CURRENT_PAGE,\n        currentPage\n    }\n}\n\nexport function changeEntireList(entireList) {\n    return {\n        type: ActionTypes.CHANGE_ENTIRE_LIST,\n        entireList\n    }\n}\n\nexport function changeIsLoading(isLoading) {\n    return {\n        type: ActionTypes.CHANGE_IS_LOADING,\n        isLoading\n    }\n}\n\nexport function changeTotalCount(totalCount) {\n    return {\n        type: ActionTypes.CHANGE_TOTAL_COUNT,\n        totalCount\n    }\n}\n\n\n// 开始网络请求\nexport const fetchEntireList = (\n    EntireList,\n    page= 0,\n    pageSize = 20\n) => {\n    return async (dispatch, getState) => {\n        // 修改 dispatch\n        console.log(page)\n        dispatch(changeCurrentPage(page))\n        dispatch(changeIsLoading(true))\n        const currentPage = getState().entire.currentPage\n        const res = await getEntireData(currentPage, pageSize)\n        if (res) {\n            const {entireList} = res.data\n            dispatch(changeEntireList(entireList))\n            dispatch(changeTotalCount(entireList?.length))\n        } else {\n            // console.log(\"请求失败\")\n            const entireList = EntireList.slice(pageSize * currentPage, pageSize * (currentPage + 1))\n            dispatch(changeEntireList(entireList))\n            dispatch(changeTotalCount(EntireList?.length))\n        }\n        dispatch(changeIsLoading(false))\n    }\n}","import JWZRequest from \"../config\";\n\nexport function getEntireData(page = 0, pageSize = 20) {\n    return JWZRequest.get({\n        url: '/entire/list',\n        params: {\n            page,\n            pageSize\n        }\n    })\n}","import { memo } from \"react\";\nimport {Pagination} from \"antd\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport PropTypes from \"prop-types\"\n\nimport EntirePaginationWrapper from \"./style/style\";\nimport {fetchEntireList} from \"../../../../store/modules/entire/createActions\";\n\nconst EntirePagination = memo((props) => {\n    const {\n        goodsList\n    } = props\n\n    const {\n        totalCount,\n        currentPage,\n        entireList\n    } = useSelector((state) => {\n        return {\n            totalCount: state.entire.totalCount,\n            currentPage: state.entire.currentPage,\n            entireList: state.entire.entireList\n        }\n    })\n\n    const startCount = currentPage * entireList.length + 1\n    const endCount = (currentPage + 1) * entireList.length\n\n    const dispatch = useDispatch()\n    function PageChangeHandle(page, pageSize) {\n        window.scrollTo(0, 0)\n        dispatch(fetchEntireList(goodsList, page - 1, pageSize))\n    }\n\n    return (\n        <EntirePaginationWrapper>\n            <div className=\"entire-pagination\">\n                <Pagination\n                    align=\"center\"\n                    defaultPage={0}\n                    total={totalCount}\n                    pageSizeOptions={[entireList.length || 20]}\n                    defaultPageSize={entireList.length || 20}\n                    responsive={true}\n                    onChange={(page, pageSize) => PageChangeHandle(page, pageSize)}\n                />\n                <div className=\"entire-pagination-desc\">\n                    第{startCount}-{endCount}条/共{totalCount}条数据\n                </div>\n            </div>\n        </EntirePaginationWrapper>\n    )\n})\n\nEntirePagination.prototype = {\n    goodsList: PropTypes.array.isRequired\n}\n\nexport default EntirePagination","import {memo, useEffect, useState} from \"react\";\nimport {useLocation} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\n\nimport EntireWrapper from \"./style\";\nimport EntireFilter from \"./childrenComponet/entire-filter\";\nimport EntireList from \"./childrenComponet/entire-list\";\nimport EntirePagination from \"./childrenComponet/entire-pagination\";\nimport {fetchEntireList} from \"../../store/modules/entire/createActions\";\n\nconst Entire = memo(() => {\n    const { state } = useLocation();\n    const { filterCards, goodList } = state || {};\n\n    const dispatch = useDispatch()\n\n    const [filterCardsState, setFilterCardsState] = useState([])\n\n    // 如果直接打印的话会出现数据为空的，所以说我们需要使用 useEffect\n    useEffect(() => {\n        setFilterCardsState(filterCards)\n        // 用于组件挂载前的数据初始化\n    }, [\n        filterCards,\n        goodList\n    ]);\n\n    useEffect(() => {\n        dispatch(fetchEntireList(goodList))\n        // eslint-disable-next-line\n    }, [dispatch, filterCards])\n\n    return (\n        <EntireWrapper>\n            <EntireFilter\n                filterCards={filterCardsState}\n            />\n            <EntireList/>\n            <EntirePagination\n                goodsList={goodList}\n            />\n        </EntireWrapper>\n    )\n})\n\nexport default Entire"],"names":["SectionItemWrapper","styled","div","_templateObject","_taggedTemplateLiteral","props","$avg","$ItemTextTitleColor","$ItemTextDetailColor","$ItemTextPriceColor","$ThemeColor","AntJzhRate","memo","allowHalf","ThemeColor","rate","starNum","antRate","setAntRate","useState","_jsx","_Fragment","children","_jsxs","AntJzhRateWrapper","Rate","onChange","num","value","star","rootClassName","prototype","PropTypes","isRequired","_item$title","_item$detail","_item$price","item","avg","navigate","useNavigate","dispatch","useDispatch","ToDetailHandle","useCallback","data","changeDetailInfoAction","Fragment","title","color","detail","price","className","Carousel","autoplay","arrows","imageList","map","imgEl","onClick","src","imageUrl","alt","id","desc","slice","EntireFilter","filterCards","selectCardNames","setSelectCardNames","EntireFilterWrapper","card","index","classNames","includes","cardName","newItems","indexOf","splice","push","EntireFilterCardClickHandle","entireList","isLoading","useSelector","state","entire","shallowEqual","setAvg","useEffect","innerWidth","window","EntireListWrapper","SectionItem","changeEntireList","type","ActionTypes","changeIsLoading","changeTotalCount","totalCount","fetchEntireList","EntireList","page","arguments","length","undefined","pageSize","async","getState","console","log","currentPage","changeCurrentPage","res","JWZRequest","get","url","params","getEntireData","EntirePagination","goodsList","startCount","endCount","EntirePaginationWrapper","Pagination","align","defaultPage","total","pageSizeOptions","defaultPageSize","responsive","scrollTo","PageChangeHandle","useLocation","goodList","filterCardsState","setFilterCardsState","EntireWrapper"],"sourceRoot":""}