{"version":3,"file":"static/js/89.3261d002.chunk.js","mappings":"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","sources":["views/home/style.js","views/home/childrenComponet/Home-Banner/style.js","views/home/childrenComponet/Home-Banner/HomeBanner.jsx","components/section-item/style/style.js","base-ui/ant-jzh-rate/style.js","base-ui/ant-jzh-rate/index.jsx","components/section-item/index.jsx","components/section-list/style/style.js","components/section-list/index.jsx","components/section-header/style/style.js","components/section-header/index.jsx","components/section-all/style/style.js","components/section-cards/style/style.js","components/section-card/style/style.js","components/section-card/index.jsx","base-ui/jzh-scroll-view/style/style.js","base-ui/jzh-scroll-view/index.jsx","components/section-cards/index.jsx","components/section-footer/style/style.js","components/section-footer/index.jsx","components/section-all/index.jsx","views/home/childrenComponet/home-section-one/style/style.js","views/home/childrenComponet/home-section-one/index.jsx","views/home/childrenComponet/home-section-two/style/style.js","views/home/childrenComponet/home-section-two/index.jsx","views/home/childrenComponet/home-section-three/style/style.js","views/home/childrenComponet/home-section-three/index.jsx","views/home/childrenComponet/home-section-long-for/style/style.js","components/section-long-for-item/style/style.js","components/section-long-for-item/index.jsx","views/home/childrenComponet/home-section-long-for/index.jsx","views/home/index.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst HomeWrapper = styled.div`\r\n    height: auto;\r\n    width: 100%;\r\n\r\n    .homeContent {\r\n        margin: 0 auto;\r\n        width: 1082px;\r\n        @media (max-width: 1082px) {\r\n            width: 100%;\r\n            padding: 0 16px;\r\n        }\r\n    }\r\n`\r\n\r\nexport default HomeWrapper;","import styled from \"styled-components\";\r\n\r\nconst BackgroundImage = new URL(\"../../../../assets/images/HomeBanner.png\", import.meta.url).href\r\n// 使用 require 将图片导入也是可以的呐\r\n\r\nconst HomeBannerWrapper = styled.div`\r\n    width: 100%;\r\n    height: 530px;\r\n    background: #938f8f url(${BackgroundImage}) no-repeat center/cover;\r\n\r\n    @media (max-width: 768px) {\r\n        height: 300px; // 移动端高度调整为 300px\r\n        background: #938f8f url(${BackgroundImage}) no-repeat center/cover;\r\n    }\r\n`\r\n\r\nexport default HomeBannerWrapper;","import {memo} from \"react\";\r\nimport HomeBannerWrapper from \"./style\";\r\n\r\nconst HomeBanner = memo(() => {\r\n    return (\r\n        <>\r\n            <HomeBannerWrapper />\r\n        </>\r\n    )\r\n})\r\n\r\nexport default HomeBanner;","import styled from 'styled-components';\r\n\r\nexport const SectionItemWrapper = styled.div`\r\n    width: ${props => props.$avg};\r\n    padding: 8px;\r\n    box-sizing: border-box;\r\n\r\n    .section-item-inner {\r\n        width: 100%;\r\n\r\n        .section-item-cover {\r\n            position: relative;\r\n            box-sizing: border-box;\r\n            padding: 100% 8px 0;  // 这个时候就创建了一个为正方形的卡片以及宽度\r\n            border-radius: 4px;\r\n            overflow: hidden;\r\n            margin: 10px 0;\r\n            transition: all 0.5s ease;\r\n\r\n            img {\r\n                position: absolute;\r\n                left: 0;\r\n                top: 0;\r\n                width: 100%;\r\n                height: 100%;\r\n                text-align: center;\r\n            }\r\n\r\n            @media (max-width: 768px) {\r\n                .section-item-cover {\r\n                    box-shadow: 0 4px 8px 0 rgba(77, 76, 76, 0.15);\r\n                    transform: translate3d(0, 0, -5px);\r\n                }\r\n            }\r\n        }\r\n\r\n        .section-item-title {\r\n            color: ${props => props.$ItemTextTitleColor};\r\n        }\r\n\r\n        .section-item-detail {\r\n            color: ${props => props.$ItemTextDetailColor};\r\n            text-overflow: ellipsis;\r\n        }\r\n\r\n        .section-item-price {\r\n            color: ${props => props.$ItemTextPriceColor};\r\n        }\r\n        \r\n        .section-item-rate {\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n\r\n        .section-item-cover {\r\n            box-shadow: 0 8px 8px 0 rgba(77, 76, 76, 0.2), \r\n                        0 20px 20px 0 rgba(77, 76, 76, 0.2);\r\n            transform: translate3d(0, 0 , 10px);\r\n        }\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        width: 50%\r\n    }\r\n    \r\n    @media (max-width: 420px) {\r\n        width: 100%;\r\n    }\r\n`","import styled from \"styled-components\";\r\n\r\nconst AntJzhRateWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-content: center;\r\n    \r\n    .ant-jzh-rate {\r\n        color: ${props => props.$ThemeColor}\r\n    }\r\n    \r\n    span {\r\n        text-align: center;\r\n    }\r\n`\r\n\r\nexport default AntJzhRateWrapper","import { Rate } from \"antd\";\r\nimport { memo, useState } from \"react\";\r\nimport AntJzhRateWrapper from \"./style\"\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AntJzhRate = memo((props) => {\r\n    const {\r\n        allowHalf,\r\n        ThemeColor,\r\n        rate,\r\n        starNum\r\n    } = props\r\n\r\n    const [antRate, setAntRate] = useState(rate)\r\n\r\n    return (\r\n        <>\r\n            <AntJzhRateWrapper\r\n                $ThemeColor={ ThemeColor || \"yellow\" }\r\n            >\r\n                <Rate\r\n                    allowHalf={allowHalf || true}\r\n                    onChange={(num) => setAntRate(num)}\r\n                    value = {\r\n                        antRate !== null\r\n                            ? antRate\r\n                            : 0\r\n                    }\r\n                    star={starNum || 10}\r\n                    rootClassName=\"ant-jzh-rate\"\r\n                />\r\n                {\r\n                    antRate !== null\r\n                        ? <span>{ antRate * 2 }</span>\r\n                        : <span>{ 0 }</span>\r\n                }\r\n            </AntJzhRateWrapper>\r\n        </>\r\n    )\r\n})\r\n\r\nAntJzhRate.prototype = {\r\n    allowHalf: PropTypes.bool,\r\n    ThemeColor: PropTypes.string,\r\n    rate: PropTypes.number.isRequired,\r\n    starNum: PropTypes.number,\r\n}\r\n\r\nexport default AntJzhRate","import { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {SectionItemWrapper} from \"./style/style\";\r\nimport AntJzhRate from \"../../base-ui/ant-jzh-rate\";\r\n\r\nconst SectionItem = memo((props) => {\r\n    const {\r\n        item,\r\n        avg\r\n    } = props\r\n\r\n    return (\r\n        <>\r\n            <SectionItemWrapper\r\n                $ItemTextTitleColor={item?.title?.color || \"#46413e\" }\r\n                $ItemTextDetailColor={item?.detail?.color || \"#675e4e\" }\r\n                $ItemTextPriceColor={item?.price?.color || \"#be5555\" }\r\n                $avg={avg}\r\n            >\r\n                <div className=\"section-item-inner\">\r\n                    <div className=\"section-item-cover\">\r\n                        <a\r\n                            href={item?.imageList[0]?.imageUrl}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <img\r\n                                src={item?.imageList[0]?.imageUrl}\r\n                                alt=\"图片正在加载...\"\r\n                            />\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"section-item-title\">\r\n                        {item.title}\r\n                    </div>\r\n                    <div className=\"section-item-detail\">\r\n                        {item.desc.slice(0, 20)}...\r\n                    </div>\r\n                    <div className=\"section-item-price\">\r\n                        ${item.price}/day\r\n                    </div>\r\n                    <div className=\"section-item-rate\">\r\n                        <AntJzhRate\r\n                            allowHalf={true}\r\n                            ThemeColor={\"orange\"}\r\n                            rate={item.rate}\r\n                            starNum={10}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </SectionItemWrapper>\r\n        </>\r\n    )\r\n})\r\n\r\nSectionItem.propTypes = {\r\n    item: PropTypes.object,\r\n    avg: PropTypes.string\r\n}\r\n\r\nexport default SectionItem","import styled from \"styled-components\"\r\n\r\nconst SectionListWrapper = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin: 0 -8px;\r\n`\r\n\r\nexport default SectionListWrapper","import { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SectionItem from \"../section-item\";\r\nimport SectionListWrapper from \"./style/style\";\r\n\r\n\r\nconst SectionList = memo((props) => {\r\n    const {\r\n        goodsList = [],\r\n        elementNum = 9,\r\n        showRows = 3\r\n    } = props\r\n\r\n    const avg = `${(1 / (elementNum / showRows) * 100).toFixed(2)}%`\r\n\r\n    return (\r\n        <SectionListWrapper>\r\n            {\r\n                goodsList?.slice(0, elementNum).map((item) => {\r\n                    return (\r\n                        <SectionItem\r\n                            item={item}\r\n                            key={item?.id}\r\n                            avg={avg}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </SectionListWrapper>\r\n    )\r\n})\r\n\r\nSectionItem.propTypes = {\r\n    goodsList: PropTypes.array.isRequired,\r\n    elementNum: PropTypes.number,\r\n    showRows: PropTypes.number\r\n}\r\n\r\nexport default SectionList","import styled from 'styled-components';\r\n\r\nexport const SectionHeaderWrapper = styled.div`\r\n    color: #222;\r\n    margin-top: 10px;\r\n    margin-bottom: 20px;\r\n\r\n    .title {\r\n        font-size: 25px;\r\n        font-weight: 700;\r\n        margin-bottom: 16px;\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    .desc {\r\n        color: #333131;\r\n        font-size: 20px;\r\n        font-weight: 500;\r\n        margin-bottom: 20px;\r\n    }\r\n`","import { memo } from \"react\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport { SectionHeaderWrapper } from \"./style/style\"\r\n\r\nconst SectionHeader = memo((props) => {\r\n    const {\r\n        title = \"home section title\",\r\n        desc\r\n    } = props\r\n\r\n    return (\r\n        <>\r\n            <SectionHeaderWrapper>\r\n                <div className=\"title\">{title}</div>\r\n                { desc && <div className=\"desc\">{ desc }</div> }\r\n            </SectionHeaderWrapper>\r\n        </>\r\n    )\r\n})\r\n\r\nSectionHeaderWrapper.propTypes = {\r\n    title: PropTypes.string,\r\n    desc: PropTypes.string,\r\n}\r\n\r\nexport default SectionHeader","import styled from \"styled-components\";\r\n\r\nconst SectionAllWrapper = styled.div`\r\n    width: 100%;\r\n    margin-top: 50px;\r\n    margin-bottom: 20px;\r\n`\r\n\r\nexport default SectionAllWrapper","import styled from \"styled-components\"\r\n\r\nconst SectionCardsWrapper = styled.div`\r\n    width: 100%;\r\n    padding-bottom: 20px;\r\n    border-bottom: 1px solid #4b4949;\r\n`\r\n\r\nexport default SectionCardsWrapper","import styled from 'styled-components';\r\n\r\nconst SectionCardWrapper = styled.div`\r\n    width: 100%;\r\n    margin-left: -8px;\r\n\r\n    .card {\r\n        text-align: center;\r\n        white-space: nowrap;\r\n        color: #13110f;\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        border: 1px solid #100d0d;\r\n        border-radius: 4px;\r\n        box-sizing: border-box;\r\n        padding: 10px 20px;\r\n        margin: 0 8px;\r\n        flex-basis: 120px;\r\n        flex-shrink: 0;\r\n        background-color: #468cbe;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .card.active {\r\n        background-color: #b73434;\r\n        color: white;\r\n        box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n    }\r\n`\r\n\r\nexport default SectionCardWrapper;","import {memo} from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from 'classnames';\r\n\r\nimport SectionCardWrapper from './style/style';\r\n\r\nconst SectionCard = memo((props) => {\r\n    const {\r\n        card = \"\",\r\n        isActive\r\n    } = props\r\n\r\n    return (\r\n        <SectionCardWrapper>\r\n            <div\r\n                className={classNames(\"card\", {active: isActive})}\r\n            >\r\n                {card}\r\n            </div>\r\n        </SectionCardWrapper>\r\n    )\r\n})\r\n\r\nSectionCard.prototype = {\r\n    card: PropTypes.string.isRequired,\r\n    isActive: PropTypes.bool\r\n}\r\n\r\nexport default SectionCard","import styled from \"styled-components\";\r\n\r\nconst JzhScrollViewWrapper = styled.div`\r\n    position: relative;\r\n    \r\n    .jzh-scroll-slot {\r\n        overflow: hidden;\r\n        .jzh-scroll-slot-content {\r\n            display: flex;\r\n            flex-wrap: nowrap;\r\n            transition: transform 0.5s ease;\r\n        }\r\n    }\r\n\r\n    .jzh-scroll-left-button,\r\n    .jzh-scroll-right-button {\r\n        position: absolute;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        cursor: pointer;\r\n        z-index: 10;\r\n        font-size: 30px;\r\n        \r\n        &:active {\r\n            box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\r\n        }\r\n    }\r\n    .jzh-scroll-left-button {\r\n        left: -8px;\r\n    }\r\n    .jzh-scroll-right-button {\r\n        right: -8px;\r\n    }\r\n`\r\n\r\nexport default JzhScrollViewWrapper;","import {memo, useEffect, useRef, useState} from 'react'\r\n\r\nimport JzhScrollViewWrapper from \"./style/style\";\r\nimport {LeftOutlined, RightOutlined} from \"@ant-design/icons\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst JzhScrollView = memo((props) => {\r\n    const {\r\n        children\r\n    } = props;\r\n\r\n    const [\r\n        showRightBottom,\r\n        setShowRightBottom\r\n    ] = useState(false);  // 记录右边按钮是否显示\r\n    const [\r\n        showLeftBottom,\r\n        setShowLeftBottom\r\n    ] = useState(false);  // 记录左边按钮是否显示\r\n    const [\r\n        positionIndex,\r\n        setPositionIndex\r\n    ] = useState(0);  // 记录点击按钮后具体需要移动元素的下标值\r\n\r\n    // 等待组件渲染完毕后判断组件是否进行渲染\r\n    // useEffect 是等待组件被渲染完毕后才回调的\r\n    // 同时依赖于我们的 children 的变化来决定内容是否显示\r\n    const jzhScrollSlotContentRef = useRef(null);\r\n    const jzhDistanceRef = useRef(null)\r\n    useEffect(() => {\r\n        const jzhScrollWidth = jzhScrollSlotContentRef.current.scrollWidth  // 获取可以滚动的宽度\r\n        const jzhClientWidth = jzhScrollSlotContentRef.current.clientWidth  // 元素本身占据的宽度\r\n        const jzhScrollLeft = jzhScrollSlotContentRef.current.scrollLeft;\r\n        const jzhDistance = jzhScrollWidth - jzhClientWidth\r\n\r\n        jzhDistanceRef.current = jzhDistance\r\n        setShowRightBottom(jzhDistance > 0)\r\n        setShowLeftBottom(jzhScrollLeft > 0);\r\n    }, [children]);\r\n\r\n\r\n    // 下面的代码是可以抽离的，就是我们的下面的两个函数代码逻辑十分的重复\r\n    // 可以使用散列表的思想来封装\r\n    // 最终的监听移动函数\r\n    const controlMoveEle = (e, isToRight = true) => {\r\n        e.preventDefault()\r\n        const newIndex = isToRight ? positionIndex + 1 : positionIndex - 1;\r\n        const newCard = jzhScrollSlotContentRef.current.children[newIndex]\r\n        if (newCard) {\r\n            const newOffsetLeft = newCard.offsetLeft\r\n            jzhScrollSlotContentRef.current.style.transform = `translate(-${newOffsetLeft}px)`\r\n            setPositionIndex(newIndex);\r\n            setShowLeftBottom(newOffsetLeft > 0)\r\n            setShowRightBottom(jzhDistanceRef.current > newOffsetLeft)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <JzhScrollViewWrapper>\r\n            {\r\n                showLeftBottom &&\r\n                <div\r\n                    className=\"jzh-scroll-left-button\"\r\n                    onMouseDown={e => controlMoveEle(e, false)}\r\n                >\r\n                    <LeftOutlined />\r\n                </div>\r\n            }\r\n            <div className=\"jzh-scroll-slot\">\r\n                <div\r\n                    className=\"jzh-scroll-slot-content\"\r\n                    ref={jzhScrollSlotContentRef}\r\n                >\r\n                    {\r\n                        children\r\n                    }\r\n                </div>\r\n            </div>\r\n            {\r\n                showRightBottom &&\r\n                <div\r\n                    className=\"jzh-scroll-right-button\"\r\n                    onMouseDown={e => controlMoveEle(e, true)}\r\n                >\r\n                    <RightOutlined/>\r\n                </div>\r\n            }\r\n        </JzhScrollViewWrapper>\r\n    )\r\n})\r\n\r\nJzhScrollView.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default JzhScrollView","import { memo, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport SectionCardsWrapper from \"./style/style\";\r\nimport SectionCard from \"../section-card\";\r\nimport JzhScrollView from \"../../base-ui/jzh-scroll-view\";\r\n// import {LeftOutlined, RightOutlined} from \"@ant-design/icons\";\r\n\r\nconst SectionCards = memo((props) => {\r\n    const {\r\n        cards = [],\r\n        cardClickHandle\r\n    } = props;\r\n\r\n    const [isActive, setIsActive] = useState(0);\r\n\r\n    function cardOnclick(index) {\r\n        setIsActive(index);\r\n        cardClickHandle(cards[index]?.card);\r\n    }\r\n\r\n    return (\r\n        <SectionCardsWrapper>\r\n            <JzhScrollView>\r\n                {\r\n                    cards.map((item, index) => (\r\n                        <div\r\n                            key={item.id}\r\n                            onClick={(e) => cardOnclick(index)}\r\n                        >\r\n                            <SectionCard\r\n                                card={item?.card}\r\n                                isActive={isActive === index}\r\n                            />\r\n                        </div>\r\n                    ))\r\n                }\r\n            </JzhScrollView>\r\n        </SectionCardsWrapper>\r\n    );\r\n});\r\n\r\nSectionCards.propTypes = {\r\n    cards: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.oneOfType([\r\n                PropTypes.string,\r\n                PropTypes.number]\r\n            ).isRequired,\r\n            card: PropTypes.object.isRequired\r\n        })\r\n    ).isRequired,\r\n    cardClickHandle: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SectionCards;","import styled from 'styled-components';\r\n\r\nconst SectionFooterWrapper = styled.div`\r\n    margin-top: 20px;\r\n\r\n    .section-footer {\r\n        display: inline-flex;\r\n        align-items: center;\r\n        border-radius: 5px;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        \r\n        .section-footer-rightArrow {\r\n            font-size: 16px;\r\n            margin-left: 10px;\r\n        }\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n        }\r\n    }\r\n`\r\n\r\nexport default SectionFooterWrapper;","import { memo } from \"react\";\r\nimport {RightOutlined} from \"@ant-design/icons\";\r\n\r\nimport SectionFooterWrapper from \"./style/style\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SectionFooter = memo((props) => {\r\n    const {\r\n        content\r\n    } = props;\r\n    return (\r\n        <SectionFooterWrapper>\r\n            <div\r\n                className=\"section-footer\"\r\n            >\r\n                <div className=\"section-footer-content\">\r\n                    查看{content}全部\r\n                </div>\r\n                <div className=\"section-footer-rightArrow\">\r\n                    <RightOutlined/>\r\n                </div>\r\n            </div>\r\n        </SectionFooterWrapper>\r\n    )\r\n})\r\n\r\nSectionFooter.propTypes = {\r\n    content: PropTypes.string.isRequired\r\n}\r\n\r\nexport default SectionFooter","import {memo, useCallback, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {faker} from \"@faker-js/faker\";\r\n\r\nimport SectionList from \"../section-list\";\r\nimport SectionHeader from \"../section-header\";\r\nimport SectionAllWrapper from \"./style/style\"\r\nimport SectionCards from \"../section-cards\";\r\nimport SectionFooter from \"../section-footer\";\r\n\r\nconst SectionAll = memo((props) => {\r\n    const {\r\n        data = {},\r\n        elementNum = 8,\r\n        showRows = 2\r\n    } = props\r\n\r\n    const {\r\n        title,\r\n        desc,\r\n        goodsList\r\n    } = data\r\n\r\n    const uniqueAddresses = new Set(goodsList.map(item => item.address));\r\n    const cards = [\r\n        {\r\n            card: \"all\",\r\n            id: faker.string.uuid(),\r\n        },\r\n        ...Array.from(uniqueAddresses).map(address => ({\r\n            card: address,\r\n            id: faker.string.uuid(),\r\n        }))\r\n    ];\r\n\r\n    const [currentCardName, setCurrentCardName] = useState(cards[0].card === \"all\" && \"\" );\r\n    const [dataListState, setDataListState] = useState(goodsList)\r\n    // useCallBack 实现解决每次重新加载组件的时候都会创建这个函数实例出来的问题，这个也是性能优化的一点吧\r\n    const cardClickHandle = useCallback((cardName) => {\r\n        setCurrentCardName(cards[0].card === \"all\" && \"\")\r\n        const newDataState = dataListState.filter(\r\n            (item) => {\r\n                if (cardName === cards[0].card) {\r\n                    return true\r\n                } else {\r\n                    return item.address === cardName\r\n                }\r\n            }\r\n        )\r\n        setDataListState(newDataState)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <SectionAllWrapper>\r\n            <SectionHeader\r\n                title={title}\r\n                desc={desc}\r\n            />\r\n            <SectionCards\r\n                cards={cards}\r\n                cardClickHandle={cardClickHandle}\r\n            />\r\n            <SectionList\r\n                goodsList={dataListState}\r\n                elementNum={elementNum}\r\n                showRows={showRows}\r\n            />\r\n            <SectionFooter\r\n                content={currentCardName}\r\n            />\r\n        </SectionAllWrapper>\r\n    )\r\n})\r\n\r\nSectionAll.prototype = {\r\n    data: PropTypes.object.isRequired,\r\n    elementNum: PropTypes.number,\r\n    showRows: PropTypes.number\r\n}\r\n\r\nexport default SectionAll","import styled from \"styled-components\"\r\n\r\nconst SectionOneWrapper = styled.div`\r\n    width: 100%;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n`\r\n\r\nexport default SectionOneWrapper","import {memo, useState, useEffect} from \"react\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport SectionAll from \"../../../../components/section-all\";\r\nimport {LazyPage} from \"../../../../components/app-lazy/lazyPage\";\r\nimport {fetchHighPriceGoodsInfoDataAction} from \"../../../../store/modules/home\";\r\nimport SectionOneWrapper from \"./style/style\";\r\n\r\nconst HomeSectionOne = memo(() => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const { HighPriceGoodsInfo } = useSelector(state => ({\r\n        HighPriceGoodsInfo: state.home.HighPriceGoodsInfo\r\n    }), shallowEqual)\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await dispatch(fetchHighPriceGoodsInfoDataAction()).then(res => {\r\n                setIsLoading(false)\r\n            }, err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n        fetchData()\r\n    }, [dispatch])\r\n\r\n    if (isLoading || !HighPriceGoodsInfo || !HighPriceGoodsInfo.goodsList) {\r\n        return <LazyPage/>\r\n    }\r\n\r\n    return (\r\n        <SectionOneWrapper>\r\n            <SectionAll\r\n                data={HighPriceGoodsInfo}\r\n            />\r\n        </SectionOneWrapper>\r\n    )\r\n})\r\n\r\nexport default HomeSectionOne","import styled from \"styled-components\"\r\n\r\nconst SectionTwoWrapper = styled.div`\r\n    width: 100%;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n`\r\n\r\nexport default SectionTwoWrapper","import {memo, useState, useEffect} from \"react\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport SectionAll from \"../../../../components/section-all\";\r\nimport {LazyPage} from \"../../../../components/app-lazy/lazyPage\";\r\nimport {fetchMiddlePriceGoodsInfoDataAction} from \"../../../../store/modules/home\";\r\nimport SectionTwoWrapper from \"./style/style\";\r\n\r\nconst HomeSectionTwo = memo(() => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const { MiddlePriceGoodsInfo } = useSelector(state => ({\r\n        MiddlePriceGoodsInfo: state.home.MiddlePriceGoodsInfo\r\n    }), shallowEqual)\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await dispatch(fetchMiddlePriceGoodsInfoDataAction()).then(res => {\r\n                setIsLoading(false)\r\n            }, err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n        fetchData()\r\n    }, [dispatch])\r\n\r\n    if (isLoading || !MiddlePriceGoodsInfo || !MiddlePriceGoodsInfo.goodsList) {\r\n        return <LazyPage/>\r\n    }\r\n\r\n    return (\r\n        <SectionTwoWrapper>\r\n            <SectionAll\r\n                data={MiddlePriceGoodsInfo}\r\n                elementNum={9}\r\n                showRows={3}\r\n            />\r\n        </SectionTwoWrapper>\r\n    )\r\n})\r\n\r\nexport default HomeSectionTwo","import styled from \"styled-components\"\r\n\r\nconst SectionThreeWrapper = styled.div`\r\n    width: 100%;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n`\r\n\r\nexport default SectionThreeWrapper","import {memo, useState, useEffect} from \"react\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport SectionAll from \"../../../../components/section-all\";\r\nimport {LazyPage} from \"../../../../components/app-lazy/lazyPage\";\r\nimport {fetchLowerPriceGoodsInfoDataAction} from \"../../../../store/modules/home\";\r\nimport SectionThreeWrapper from \"./style/style\";\r\n\r\nconst HomeSectionThree = memo(() => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const { LowerPriceGoodsInfo } = useSelector(state => ({\r\n        LowerPriceGoodsInfo: state.home.LowerPriceGoodsInfo\r\n    }), shallowEqual)\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await dispatch(fetchLowerPriceGoodsInfoDataAction()).then(res => {\r\n                setIsLoading(false)\r\n            }, err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n        fetchData()\r\n    }, [dispatch])\r\n\r\n    if (isLoading || !LowerPriceGoodsInfo || !LowerPriceGoodsInfo.goodsList) {\r\n        return <LazyPage/>\r\n    }\r\n\r\n    return (\r\n        <SectionThreeWrapper>\r\n            <SectionAll\r\n                data={LowerPriceGoodsInfo}\r\n                elementNum={10}\r\n                showRows={2}\r\n            />\r\n        </SectionThreeWrapper>\r\n    )\r\n})\r\n\r\nexport default HomeSectionThree","import styled from 'styled-components';\r\n\r\nconst HomeSectionLongForWrapper = styled.div`\r\n    .long-for-list {\r\n        width: 100%;\r\n        \r\n        .long-for-item {\r\n            flex-shrink: 0;\r\n            flex-grow: 0;\r\n            width: 25%\r\n        }\r\n    }\r\n`\r\n\r\nexport default HomeSectionLongForWrapper;","import styled from \"styled-components\";\r\n\r\nconst SectionLongForItemWrapper = styled.div`\r\n    width: 100%;\r\n    margin-left: -4px;\r\n    background-color: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    padding:8px;\r\n\r\n    .long-for-inner {\r\n        width: 100%;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .long-for-cover {\r\n        width: 100%;\r\n        height: 200px; \r\n        object-fit: cover; \r\n        border-radius: 8px 8px 0 0; \r\n        position: relative; \r\n        z-index: 1; \r\n    }\r\n\r\n    .long-for-bg-cover {\r\n        position: absolute;\r\n        height: 60%; \r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        width: 100%;\r\n        background-image: linear-gradient(-180deg, rgba(0,0,0,0) 3%, rgb(0,0,0) 100%);\r\n        border-radius: 8px 8px 8px 8px; \r\n        z-index: 2; \r\n    }\r\n\r\n    .long-for-content {\r\n        position: absolute;\r\n        bottom: 20px;\r\n        left: 0;\r\n        right: 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        z-index: 3; \r\n        pointer-events: none; \r\n    }\r\n\r\n    .long-for-city {\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: #fff;\r\n        text-align: center; \r\n    }\r\n\r\n    .long-for-category {\r\n        font-size: 14px;\r\n        margin-top: 8px;\r\n        color: #fff;\r\n        text-align: center; \r\n    }\r\n`;\r\n\r\nexport default SectionLongForItemWrapper;","import React from \"react\";\r\nimport SectionLongForItemWrapper from \"./style/style\";\r\n\r\nconst SectionLongForItem = ({ goodsItem, address, category }) => {\r\n    const imageUrl = goodsItem?.imageList?.[0]?.imageUrl || \"/path/to/default/image.jpg\";\r\n\r\n    return (\r\n        <SectionLongForItemWrapper>\r\n            <div className=\"long-for-inner\">\r\n                <img\r\n                    className=\"long-for-cover\"\r\n                    src={imageUrl}\r\n                    alt=\"图片正在加载中...\"\r\n                />\r\n                <div className=\"long-for-bg-cover\"></div>\r\n                <div className=\"long-for-content\">\r\n                    <div className=\"long-for-city\">\r\n                        {address || \"默认地址\"}\r\n                    </div>\r\n                    <div className=\"long-for-category\">\r\n                        {category || \"默认分类\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </SectionLongForItemWrapper>\r\n    );\r\n};\r\n\r\nexport default SectionLongForItem;","import {memo, useEffect, useState} from 'react';\r\n\r\nimport HomeSectionLongForWrapper from \"./style/style\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchLongForInfoDataAction} from \"../../../../store/modules/home\";\r\nimport {LazyPage} from \"../../../../components/app-lazy/lazyPage\";\r\nimport SectionHeader from \"../../../../components/section-header\";\r\nimport SectionLongForItem from \"../../../../components/section-long-for-item\";\r\nimport JzhScrollView from \"../../../../base-ui/jzh-scroll-view\";\r\n\r\nconst HomeSectionLongFor = memo(() => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const { LongForInfo } = useSelector(state => ({\r\n        LongForInfo: state.home.LongForInfo\r\n    }), shallowEqual)\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await dispatch(fetchLongForInfoDataAction()).then(res => {\r\n                setIsLoading(false)\r\n            }, err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n        fetchData()\r\n    }, [dispatch])\r\n\r\n    if (isLoading || !LongForInfo || !LongForInfo.goodsList) {\r\n        return <LazyPage/>\r\n    }\r\n\r\n    return (\r\n        <HomeSectionLongForWrapper>\r\n            <SectionHeader\r\n                title={LongForInfo?.title}\r\n                desc={LongForInfo?.desc}\r\n            />\r\n            <div className=\"long-for-list\">\r\n                <JzhScrollView>\r\n                    {\r\n                        LongForInfo?.goodsList.map(item => {\r\n                            return (\r\n                                <div key={item?.id} className=\"long-for-item\">\r\n                                    <SectionLongForItem\r\n                                        goodsItem={item || {}}\r\n                                        address={item?.address || \"\"}\r\n                                        category={item?.category || \"\"}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </JzhScrollView>\r\n            </div>\r\n        </HomeSectionLongForWrapper>\r\n    )\r\n})\r\n\r\nexport default HomeSectionLongFor;","import {memo} from \"react\";\r\nimport HomeWrapper from \"./style\";\r\nimport HomeBanner from \"./childrenComponet/Home-Banner/HomeBanner\";\r\nimport HomeSectionOne from \"./childrenComponet/home-section-one\";\r\nimport HomeSectionTwo from \"./childrenComponet/home-section-two\";\r\nimport HomeSectionThree from \"./childrenComponet/home-section-three\";\r\nimport HomeSectionLongFor from \"./childrenComponet/home-section-long-for\";\r\n\r\nconst Home = memo(() => {\r\n    return (\r\n        <>\r\n            <HomeWrapper>\r\n                <HomeBanner />\r\n                <div className=\"homeContent\">\r\n                    <HomeSectionOne/>\r\n                    <HomeSectionTwo/>\r\n                    <HomeSectionThree/>\r\n                    <HomeSectionLongFor/>\r\n                </div>\r\n            </HomeWrapper>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Home"],"names":["styled","div","_templateObject","_taggedTemplateLiteral","BackgroundImage","URL","href","memo","_jsx","_Fragment","children","HomeBannerWrapper","SectionItemWrapper","props","$avg","$ItemTextTitleColor","$ItemTextDetailColor","$ItemTextPriceColor","$ThemeColor","AntJzhRate","allowHalf","ThemeColor","rate","starNum","antRate","setAntRate","useState","_jsxs","AntJzhRateWrapper","Rate","onChange","num","value","star","rootClassName","prototype","PropTypes","isRequired","_item$title","_item$detail","_item$price","_item$imageList$","_item$imageList$2","item","avg","title","color","detail","price","className","imageList","imageUrl","target","rel","src","alt","desc","slice","SectionList","goodsList","elementNum","showRows","concat","toFixed","SectionListWrapper","map","SectionItem","id","propTypes","SectionHeaderWrapper","SectionHeader","SectionCard","card","isActive","SectionCardWrapper","classNames","active","showRightBottom","setShowRightBottom","showLeftBottom","setShowLeftBottom","positionIndex","setPositionIndex","jzhScrollSlotContentRef","useRef","jzhDistanceRef","useEffect","jzhScrollWidth","current","scrollWidth","jzhClientWidth","clientWidth","jzhScrollLeft","scrollLeft","jzhDistance","controlMoveEle","e","isToRight","arguments","length","undefined","preventDefault","newIndex","newCard","newOffsetLeft","offsetLeft","style","transform","JzhScrollViewWrapper","onMouseDown","LeftOutlined","ref","RightOutlined","cards","cardClickHandle","setIsActive","SectionCardsWrapper","JzhScrollView","index","onClick","_cards$index","cardOnclick","content","SectionFooterWrapper","SectionAll","data","uniqueAddresses","Set","address","faker","string","uuid","Array","from","currentCardName","setCurrentCardName","dataListState","setDataListState","useCallback","cardName","newDataState","filter","SectionAllWrapper","SectionCards","SectionFooter","isLoading","setIsLoading","HighPriceGoodsInfo","useSelector","state","home","shallowEqual","dispatch","useDispatch","async","fetchHighPriceGoodsInfoDataAction","then","res","err","console","log","fetchData","SectionOneWrapper","LazyPage","MiddlePriceGoodsInfo","fetchMiddlePriceGoodsInfoDataAction","SectionTwoWrapper","LowerPriceGoodsInfo","fetchLowerPriceGoodsInfoDataAction","SectionThreeWrapper","_ref","_goodsItem$imageList","_goodsItem$imageList$","goodsItem","category","SectionLongForItemWrapper","LongForInfo","fetchLongForInfoDataAction","HomeSectionLongForWrapper","SectionLongForItem","HomeWrapper","HomeBanner","HomeSectionOne","HomeSectionTwo","HomeSectionThree","HomeSectionLongFor"],"sourceRoot":""}