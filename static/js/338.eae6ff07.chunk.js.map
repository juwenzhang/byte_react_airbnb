{"version":3,"file":"static/js/338.eae6ff07.chunk.js","mappings":"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","sources":["components/section-item/style/style.js","base-ui/ant-jzh-rate/style.js","base-ui/ant-jzh-rate/index.jsx","components/section-item/index.jsx","views/entire/style.js","views/entire/childrenComponet/entire-filter/style/style.js","views/entire/childrenComponet/entire-filter/index.jsx","views/entire/childrenComponet/entire-list/style/style.js","views/entire/childrenComponet/entire-list/index.jsx","views/entire/childrenComponet/entire-pagination/style/style.js","views/entire/childrenComponet/entire-pagination/index.jsx","store/modules/entire/createActions.js","services/modules/entire.js","views/entire/index.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionItemWrapper = styled.div`\n    width: ${props => props.$avg};\n    padding: 8px;\n    box-sizing: border-box;\n\n    .section-item-inner {\n        width: 100%;\n\n        .section-item-cover {\n            position: relative;\n            box-sizing: border-box;\n            padding: 100% 8px 0;  // 这个时候就创建了一个为正方形的卡片以及宽度\n            border-radius: 4px;\n            overflow: hidden;\n            margin: 10px 0;\n            transition: all 0.5s ease;\n\n            img {\n                position: absolute;\n                left: 0;\n                top: 0;\n                width: 100%;\n                height: 100%;\n                text-align: center;\n            }\n\n            @media (max-width: 768px) {\n                .section-item-cover {\n                    box-shadow: 0 4px 8px 0 rgba(77, 76, 76, 0.15);\n                    transform: translate3d(0, 0, -5px);\n                }\n            }\n        }\n\n        .section-item-title {\n            color: ${props => props.$ItemTextTitleColor};\n        }\n\n        .section-item-detail {\n            color: ${props => props.$ItemTextDetailColor};\n            text-overflow: ellipsis;\n        }\n\n        .section-item-price {\n            color: ${props => props.$ItemTextPriceColor};\n        }\n        \n        .section-item-rate {\n        }\n    }\n\n    &:hover {\n        cursor: pointer;\n\n        .section-item-cover {\n            box-shadow: 0 8px 8px 0 rgba(77, 76, 76, 0.2), \n                        0 20px 20px 0 rgba(77, 76, 76, 0.2);\n            transform: translate3d(0, 0 , 10px);\n        }\n    }\n\n    @media (max-width: 768px) {\n        width: 50%\n    }\n    \n    @media (max-width: 420px) {\n        width: 100%;\n    }\n`","import styled from \"styled-components\";\n\nconst AntJzhRateWrapper = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-content: center;\n    \n    .ant-jzh-rate {\n        color: ${props => props.$ThemeColor}\n    }\n    \n    span {\n        text-align: center;\n    }\n`\n\nexport default AntJzhRateWrapper","import { Rate } from \"antd\";\nimport { memo, useState } from \"react\";\nimport AntJzhRateWrapper from \"./style\"\nimport PropTypes from \"prop-types\";\n\nconst AntJzhRate = memo((props) => {\n    const {\n        allowHalf,\n        ThemeColor,\n        rate,\n        starNum\n    } = props\n\n    const [antRate, setAntRate] = useState(rate)\n\n    return (\n        <>\n            <AntJzhRateWrapper\n                $ThemeColor={ ThemeColor || \"yellow\" }\n            >\n                <Rate\n                    allowHalf={allowHalf || true}\n                    onChange={(num) => setAntRate(num)}\n                    value = {\n                        antRate !== null\n                            ? antRate\n                            : 0\n                    }\n                    star={starNum || 10}\n                    rootClassName=\"ant-jzh-rate\"\n                />\n                {\n                    antRate !== null\n                        ? <span>{ antRate * 2 }</span>\n                        : <span>{ 0 }</span>\n                }\n            </AntJzhRateWrapper>\n        </>\n    )\n})\n\nAntJzhRate.prototype = {\n    allowHalf: PropTypes.bool,\n    ThemeColor: PropTypes.string,\n    rate: PropTypes.number.isRequired,\n    starNum: PropTypes.number,\n}\n\nexport default AntJzhRate","import { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {SectionItemWrapper} from \"./style/style\";\nimport AntJzhRate from \"../../base-ui/ant-jzh-rate\";\n\nconst SectionItem = memo((props) => {\n    const {\n        item,\n        avg\n    } = props\n\n    return (\n        <>\n            <SectionItemWrapper\n                $ItemTextTitleColor={item?.title?.color || \"#46413e\" }\n                $ItemTextDetailColor={item?.detail?.color || \"#675e4e\" }\n                $ItemTextPriceColor={item?.price?.color || \"#be5555\" }\n                $avg={avg}\n            >\n                <div className=\"section-item-inner\">\n                    <div className=\"section-item-cover\">\n                        <a\n                            href={item?.imageList[0]?.imageUrl}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <img\n                                src={item?.imageList[0]?.imageUrl}\n                                alt=\"图片正在加载...\"\n                            />\n                        </a>\n                    </div>\n                    <div className=\"section-item-title\">\n                        {item.title}\n                    </div>\n                    <div className=\"section-item-detail\">\n                        {item.desc.slice(0, 20)}...\n                    </div>\n                    <div className=\"section-item-price\">\n                        ${item.price}/day\n                    </div>\n                    <div className=\"section-item-rate\">\n                        <AntJzhRate\n                            allowHalf={true}\n                            ThemeColor={\"orange\"}\n                            rate={item.rate}\n                            starNum={10}\n                        />\n                    </div>\n                </div>\n            </SectionItemWrapper>\n        </>\n    )\n})\n\nSectionItem.propTypes = {\n    item: PropTypes.object,\n    avg: PropTypes.string\n}\n\nexport default SectionItem","import styled from \"styled-components\";\n\nconst EntireWrapper = styled.div`\n\n`\n\nexport default EntireWrapper","import styled from \"styled-components\"\n\nconst EntireFilterWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    height: auto;\n    padding: 20px 16px 10px;\n    \n    margin-bottom: 20px;\n    background: #f4f8fa;\n\n    position: fixed;\n    z-index: 99;\n    left: 0;\n    right: 0;\n    top: 80px;\n\n    border-bottom: 1px solid #b2adad;\n\n    .entire-filter {\n        display: flex;\n        flex-shrink: 0;\n\n        .entire-filter-card {\n            margin: 0 4px 0 8px;\n            padding: 6px 12px;\n            border: 1px solid #dce0e0;\n            border-radius: 4px;\n            color: #484848;\n            cursor: pointer;\n\n            &.active {\n                background: #008489;\n                border: 1px solid #008499;\n                color: #ffffff;\n            }\n        }\n    }\n`\n\nexport default EntireFilterWrapper","import {memo, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport EntireFilterWrapper from \"./style/style\";\n\nconst EntireFilter = memo((props) => {\n    const {\n        filterCards\n    } = props\n\n    const [selectCardNames, setSelectCardNames] = useState([])\n\n    const EntireFilterCardClickHandle = (cardName) => {\n        const newItems = [...selectCardNames]\n        if (newItems.includes(cardName)) {\n            // 移除元素的通用操作\n            const index = newItems.indexOf(cardName)\n            newItems.splice(index, 1)\n        } else {\n            newItems.push(cardName)\n        }\n        setSelectCardNames(newItems)\n    }\n\n    return (\n        <EntireFilterWrapper>\n            <div className=\"entire-filter\">\n                {\n                    filterCards.slice(0, 8).map((card, index) => {\n                        return (\n                            <div\n                                key={card?.id}\n                                className={\n                                    classNames(\n                                        \"entire-filter-card\",\n                                        {\n                                            \"active\": selectCardNames.includes(card?.card)\n                                        }\n                                    )}\n                                onClick={\n                                    () => EntireFilterCardClickHandle(card?.card)\n                                }\n                            >\n                                {\n                                    card.card\n                                }\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </EntireFilterWrapper>\n    )\n})\n\nEntireFilter.prototype = {\n    filterCards: PropTypes.array\n}\n\nexport default EntireFilter","import styled from \"styled-components\"\n\nconst EntireListWrapper = styled.div`\n    //width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 70px;\n    padding: 20px 50px;\n`\n\nexport default EntireListWrapper","import {memo, useEffect, useState} from \"react\";\nimport {shallowEqual, useSelector} from \"react-redux\";\n\nimport EntireListWrapper from \"./style/style\";\nimport SectionItem from \"../../../../components/section-item\";\n\nconst EntireList = memo(() => {\n    // 开始展示我们的数据\n    const {entireList} = useSelector(state => {\n        return {\n            entireList :state.entire.entireList\n        }\n    }, shallowEqual)\n\n    const [avg, setAvg] = useState(\"25%\")\n    useEffect(() => {\n        const innerWidth  = window.innerWidth\n        innerWidth  > 375 ? setAvg(\"25%\") : setAvg(\"50%\")\n    }, []);\n\n    return (\n        <EntireListWrapper>\n            {\n                entireList.map((item) => {\n                    return <SectionItem\n                        item={item}\n                        avg={avg}\n                        key={item.id}\n                    />\n                })\n            }\n        </EntireListWrapper>\n    )\n})\n\nexport default EntireList","import styled from \"styled-components\"\n\nconst EntirePaginationWrapper = styled.div`\n    .entire-pagination {\n        display: flex;\n        flex-flow: column nowrap;\n        justify-content: center;\n        align-items: center;\n        gap: 20px;\n    }\n`\n\nexport default EntirePaginationWrapper","import { memo } from \"react\";\nimport {Pagination} from \"antd\";\nimport {useSelector} from \"react-redux\";\n\nimport EntirePaginationWrapper from \"./style/style\";\n\nconst EntirePagination = memo(() => {\n    const {\n        totalCount,\n        currentPage,\n        entireList\n    } = useSelector((state) => {\n        return {\n            totalCount: state.entire.totalCount,\n            currentPage: state.entire.currentPage,\n            entireList: state.entire.entireList\n        }\n    })\n\n    const startCount = currentPage * entireList.length + 1\n    const endCount = (currentPage + 1) * entireList.length\n\n    return (\n        <EntirePaginationWrapper>\n            <div className=\"entire-pagination\">\n                <Pagination\n                    align=\"center\"\n                    defaultPage={0}\n                    total={totalCount}\n                    pageSizeOptions={[entireList.length]}\n                    defaultPageSize={entireList.length}\n                    responsive={true}\n\n                />\n                <div className=\"entire-pagination-desc\">\n                    第{startCount}-{endCount}条/共{totalCount}条数据\n                </div>\n            </div>\n        </EntirePaginationWrapper>\n    )\n})\n\nexport default EntirePagination","import * as ActionTypes from \"./constants\"\nimport {getEntireData} from \"../../../services/modules/entire\";\n\nexport function changeCurrentPage(currentPage) {\n    return {\n        type: ActionTypes.CHANGE_CURRENT_PAGE,\n        currentPage\n    }\n}\n\nexport function changeEntireList(entireList) {\n    return {\n        type: ActionTypes.CHANGE_ENTIRE_LIST,\n        entireList\n    }\n}\n\nexport function changeTotalCount(totalCount) {\n    return {\n        type: ActionTypes.CHANGE_TOTAL_COUNT,\n        totalCount\n    }\n}\n\n\n// 开始网络请求\nexport const fetchEntireList = (\n    EntireList,\n    page= 0,\n    pageSize = 20\n) => {\n    return async (dispatch, getState) => {\n        const currentPage = getState().entire.currentPage\n        const res = await getEntireData(currentPage, pageSize)\n        if (res) {\n            const {entireList} = res.data\n            dispatch(changeEntireList(entireList))\n            dispatch(changeTotalCount(entireList?.length))\n        } else {\n            console.log(\"请求失败\")\n            const entireList = EntireList.slice(pageSize * currentPage, pageSize * (currentPage + 1))\n            dispatch(changeEntireList(entireList))\n            dispatch(changeTotalCount(EntireList?.length))\n        }\n    }\n}","import JWZRequest from \"../config\";\n\nexport function getEntireData(page = 0, pageSize = 20) {\n    return JWZRequest.get({\n        url: '/entire/list',\n        params: {\n            page,\n            pageSize\n        }\n    })\n}","import {memo, useEffect, useState} from \"react\";\nimport {useLocation} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\n\nimport EntireWrapper from \"./style\";\nimport EntireFilter from \"./childrenComponet/entire-filter\";\nimport EntireList from \"./childrenComponet/entire-list\";\nimport EntirePagination from \"./childrenComponet/entire-pagination\";\nimport {fetchEntireList} from \"../../store/modules/entire/createActions\";\n\nconst Entire = memo(() => {\n    const { state } = useLocation();\n    const { filterCards, goodList } = state || {};\n\n    const dispatch = useDispatch()\n\n    const [filterCardsState, setFilterCardsState] = useState([])\n    const [goodListState, setGoodListState] = useState([])\n\n    // 如果直接打印的话会出现数据为空的，所以说我们需要使用 useEffect\n    useEffect(() => {\n        setFilterCardsState(filterCards)\n        setGoodListState(goodList)\n        // 用于组件挂载前的数据初始化\n    }, [\n        filterCardsState,\n        goodListState,\n        filterCards,\n        goodList\n    ]);\n\n    useEffect(() => {\n        dispatch(fetchEntireList(goodList))\n        // eslint-disable-next-line\n    }, [dispatch, filterCards])\n\n    return (\n        <EntireWrapper>\n            <EntireFilter\n                filterCards={filterCardsState}\n            />\n            <EntireList/>\n            <EntirePagination/>\n        </EntireWrapper>\n    )\n})\n\nexport default Entire"],"names":["SectionItemWrapper","styled","div","_templateObject","_taggedTemplateLiteral","props","$avg","$ItemTextTitleColor","$ItemTextDetailColor","$ItemTextPriceColor","$ThemeColor","AntJzhRate","memo","allowHalf","ThemeColor","rate","starNum","antRate","setAntRate","useState","_jsx","_Fragment","children","_jsxs","AntJzhRateWrapper","Rate","onChange","num","value","star","rootClassName","prototype","PropTypes","isRequired","_item$title","_item$detail","_item$price","_item$imageList$","_item$imageList$2","item","avg","title","color","detail","price","className","href","imageList","imageUrl","target","rel","src","alt","desc","slice","EntireFilter","filterCards","selectCardNames","setSelectCardNames","EntireFilterWrapper","map","card","index","classNames","includes","onClick","cardName","newItems","indexOf","splice","push","EntireFilterCardClickHandle","id","entireList","useSelector","state","entire","shallowEqual","setAvg","useEffect","innerWidth","window","EntireListWrapper","SectionItem","totalCount","currentPage","startCount","length","endCount","EntirePaginationWrapper","Pagination","align","defaultPage","total","pageSizeOptions","defaultPageSize","responsive","changeEntireList","type","ActionTypes","changeTotalCount","fetchEntireList","EntireList","pageSize","arguments","undefined","async","dispatch","getState","res","page","JWZRequest","get","url","params","getEntireData","data","console","log","useLocation","goodList","useDispatch","filterCardsState","setFilterCardsState","goodListState","setGoodListState","EntireWrapper","EntirePagination"],"sourceRoot":""}