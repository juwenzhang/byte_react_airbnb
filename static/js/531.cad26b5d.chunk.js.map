{"version":3,"file":"static/js/531.cad26b5d.chunk.js","mappings":"0KAEO,MAAMA,EAAqBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2sDAC/BC,GAASA,EAAMC,OAmCPD,GAASA,EAAME,sBAIfF,GAASA,EAAMG,uBAKfH,GAASA,EAAMI,sB,gBC7CpC,MAcA,EAd0BR,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0MAMnBC,GAASA,EAAMK,c,gCCHhC,MAAMC,GAAaC,EAAAA,EAAAA,OAAMP,IACrB,MAAM,UACFQ,EAAS,WACTC,EAAU,KACVC,EAAI,QACJC,GACAX,GAEGY,EAASC,IAAcC,EAAAA,EAAAA,UAASJ,GAEvC,OACIK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAACC,EAAiB,CACdd,YAAcI,GAAc,SAAUQ,SAAA,EAEtCF,EAAAA,EAAAA,KAACK,EAAAA,EAAI,CACDZ,UAAWA,IAAa,EACxBa,SAAWC,GAAQT,EAAWS,GAC9BC,MACgB,OAAZX,EACMA,EACA,EAEVY,KAAMb,GAAW,GACjBc,cAAc,iBAGF,OAAZb,GACMG,EAAAA,EAAAA,KAAA,QAAAE,SAAkB,EAAVL,KACRG,EAAAA,EAAAA,KAAA,QAAAE,SAAQ,QAGvB,IAIXX,EAAWoB,UAAY,CACnBlB,UAAWmB,IAAAA,KACXlB,WAAYkB,IAAAA,OACZjB,KAAMiB,IAAAA,OAAiBC,WACvBjB,QAASgB,IAAAA,QAGb,U,4CCvCA,MAyEA,GAzEoBpB,EAAAA,EAAAA,OAAMP,IAAW,IAAD6B,EAAAC,EAAAC,EAChC,MAAM,KACFC,EAAI,IACJC,GACAjC,EAEEkC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAiBC,EAAAA,EAAAA,cAAaC,IAChCJ,GAASK,EAAAA,EAAAA,GAAuBD,IAChCN,EAAS,UAAU,GAEpB,CAACF,IAEJ,OACIjB,EAAAA,EAAAA,KAAC2B,EAAAA,SAAQ,CAAAzB,UACLF,EAAAA,EAAAA,KAACpB,EAAkB,CACfO,qBAAyB,OAAJ8B,QAAI,IAAJA,GAAW,QAAPH,EAAJG,EAAMW,aAAK,IAAAd,OAAP,EAAJA,EAAae,QAAS,UAC3CzC,sBAA0B,OAAJ6B,QAAI,IAAJA,GAAY,QAARF,EAAJE,EAAMa,cAAM,IAAAf,OAAR,EAAJA,EAAcc,QAAS,UAC7CxC,qBAAyB,OAAJ4B,QAAI,IAAJA,GAAW,QAAPD,EAAJC,EAAMc,aAAK,IAAAf,OAAP,EAAJA,EAAaa,QAAS,UAC3C3C,KAAMgC,EAAIhB,UAEVC,EAAAA,EAAAA,MAAA,OAAK6B,UAAU,qBAAoB9B,SAAA,EAC/BF,EAAAA,EAAAA,KAACiC,EAAAA,EAAQ,CACLC,UAAQ,EACRC,QAAM,EAAAjC,SAGE,OAAJe,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,UAAUC,KAAIC,IAEZtC,EAAAA,EAAAA,KAAA,OACIgC,UAAU,qBAEVO,QAASA,IAAMhB,EAAmB,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMmB,WAAWlC,UAE/CF,EAAAA,EAAAA,KAAA,OACIwC,IAAU,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOG,SACZC,IAAI,6CALHJ,EAAMK,SAY/B3C,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,qBAAoB9B,SAClCe,EAAKW,SAENzB,EAAAA,EAAAA,MAAA,OAAK6B,UAAU,sBAAqB9B,SAAA,CAC/Be,EAAK2B,KAAKC,MAAM,EAAG,IAAI,UAE5B1C,EAAAA,EAAAA,MAAA,OAAK6B,UAAU,qBAAoB9B,SAAA,CAAC,IAC9Be,EAAKc,MAAM,WAEjB/B,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,oBAAmB9B,UAC9BF,EAAAA,EAAAA,KAACT,EAAU,CACPE,WAAW,EACXC,WAAY,SACZC,KAAMsB,EAAKtB,KACXC,QAAS,aAKlB,G,oFCvEnB,MAcA,EAdoBf,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sO,MCA9B,MAAM8D,EAAkB,IAAIC,IAAI,aAA6DC,KAc7F,EAX0BnE,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mSAGN8D,EAIIA,G,aCTlC,MAQA,GARmBtD,EAAAA,EAAAA,OAAK,KAEhBQ,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAACiD,EAAiB,Q,iECJ9B,MAOA,EAP2BpE,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2FCI/BkE,GAAc1D,EAAAA,EAAAA,OAAMP,IACtB,MAAM,UACFkE,EAAY,GAAE,WACdC,EAAa,EAAC,SACdC,EAAW,GACXpE,EAEEiC,EAAG,GAAAoC,QAAO,GAAKF,EAAaC,GAAY,KAAKE,QAAQ,GAAE,KAE7D,OACIvD,EAAAA,EAAAA,KAACwD,EAAkB,CAAAtD,SAEF,OAATiD,QAAS,IAATA,OAAS,EAATA,EAAWN,MAAM,EAAGO,GAAYf,KAAKpB,IAE7BjB,EAAAA,EAAAA,KAACyD,EAAAA,EAAW,CACRxC,KAAMA,EAENC,IAAKA,GADI,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,OAMV,IAI7Bc,EAAAA,EAAYC,UAAY,CACpBP,UAAWvC,IAAAA,MAAgBC,WAC3BuC,WAAYxC,IAAAA,OACZyC,SAAUzC,IAAAA,QAGd,U,MCpCO,MAAM+C,EAAuB9E,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uXCGxC4E,GAAgBpE,EAAAA,EAAAA,OAAMP,IACxB,MAAM,MACF2C,EAAQ,qBAAoB,KAC5BgB,GACA3D,EAEJ,OACIe,EAAAA,EAAAA,KAAC2B,EAAAA,SAAQ,CAAAzB,UACLC,EAAAA,EAAAA,MAACwD,EAAoB,CAAAzD,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,QAAO9B,SAAE0B,IACtBgB,IAAQ5C,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,OAAM9B,SAAG0C,QAE/B,IAInBe,EAAqBD,UAAY,CAC7B9B,MAAOhB,IAAAA,OACPgC,KAAMhC,IAAAA,QAGV,U,MCxBA,MAMA,EAN0B/B,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6E,MCApC,MAMA,EAN4BH,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8F,yBCAtC,MA4BA,EA5B2BH,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6oBCI/B6E,GAAcrE,EAAAA,EAAAA,OAAMP,IACtB,MAAM,KACF6E,EAAO,GAAE,SACTC,GACA9E,EAEJ,OACIe,EAAAA,EAAAA,KAACgE,EAAkB,CAAA9D,UACfF,EAAAA,EAAAA,KAAA,OACIgC,UAAWiC,IAAW,OAAQ,CAACC,OAAQH,IAAW7D,SAEjD4D,KAEY,IAI7BD,EAAYlD,UAAY,CACpBmD,KAAMlD,IAAAA,OAAiBC,WACvBkD,SAAUnD,IAAAA,MAGd,U,MC1BA,MAiCA,EAjC6B/B,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6rB,uBCIvC,MAyFA,GAzFsBQ,EAAAA,EAAAA,OAAMP,IACxB,MAAM,SACFiB,GACAjB,GAGAkF,EACAC,IACArE,EAAAA,EAAAA,WAAS,IAETsE,EACAC,IACAvE,EAAAA,EAAAA,WAAS,IAETwE,EACAC,IACAzE,EAAAA,EAAAA,UAAS,GAKP0E,GAA0BC,EAAAA,EAAAA,QAAO,MACjCC,GAAiBD,EAAAA,EAAAA,QAAO,OAC9BE,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAiBJ,EAAwBK,QAAQC,YACjDC,EAAiBP,EAAwBK,QAAQG,YACjDC,EAAgBT,EAAwBK,QAAQK,WAChDC,EAAcP,EAAiBG,EAErCL,EAAeG,QAAUM,EACzBhB,EAAmBgB,EAAc,GACjCd,EAAkBY,EAAgB,EAAE,GACrC,CAAChF,IAMJ,MAAMmF,EAAiB,SAACC,GAAyB,IAAtBC,IAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAChCF,EAAEK,iBACF,MAAMC,EAAWL,EAAYhB,EAAgB,EAAIA,EAAgB,EAC3DsB,EAAUpB,EAAwBK,QAAQ5E,SAAS0F,GACzD,GAAIC,EAAS,CACT,MAAMC,EAAgBD,EAAQE,WAC9BtB,EAAwBK,QAAQkB,MAAMC,UAAS,cAAA3C,OAAiBwC,EAAa,OAC7EtB,EAAiBoB,GACjBtB,EAAkBwB,EAAgB,GAClC1B,EAAmBO,EAAeG,QAAUgB,EAChD,CACJ,EAEA,OACI3F,EAAAA,EAAAA,MAAC+F,EAAoB,CAAAhG,SAAA,CAEbmE,IACArE,EAAAA,EAAAA,KAAA,OACIgC,UAAU,yBACVmE,YAAab,GAAKD,EAAeC,GAAG,GAAOpF,UAE3CF,EAAAA,EAAAA,KAACoG,EAAAA,EAAY,OAGrBpG,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,kBAAiB9B,UAC5BF,EAAAA,EAAAA,KAAA,OACIgC,UAAU,0BACVqE,IAAK5B,EAAwBvE,SAGzBA,MAKRiE,IACAnE,EAAAA,EAAAA,KAAA,OACIgC,UAAU,0BACVmE,YAAab,GAAKD,EAAeC,GAAG,GAAMpF,UAE1CF,EAAAA,EAAAA,KAACsG,EAAAA,EAAa,QAGH,IChC/B,GA/CqB9G,EAAAA,EAAAA,OAAMP,IACvB,MAAM,MACFsH,EAAQ,GAAE,gBACVC,GACAvH,GAEG8E,EAAU0C,IAAe1G,EAAAA,EAAAA,UAAS,GAOzC,OACIC,EAAAA,EAAAA,KAAC0G,EAAmB,CAAAxG,UAChBF,EAAAA,EAAAA,KAAC2G,EAAa,CAAAzG,SAENqG,EAAMlE,KAAI,CAACpB,EAAM2F,KACb5G,EAAAA,EAAAA,KAAA,OAEIuC,QAAU+C,GAZlC,SAAqBsB,GAAQ,IAADC,EACxBJ,EAAYG,GACZJ,EAA4B,QAAbK,EAACN,EAAMK,UAAM,IAAAC,OAAA,EAAZA,EAAc/C,KAClC,CASwCgD,CAAYF,GAAO1G,UAEnCF,EAAAA,EAAAA,KAAC6D,EAAW,CACRC,KAAU,OAAJ7C,QAAI,IAAJA,OAAI,EAAJA,EAAM6C,KACZC,SAAUA,IAAa6C,KALtB3F,EAAK0B,SAWR,I,MCpC9B,MAsBA,EAtB6B9D,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6aCoCvC,GAhCsBQ,EAAAA,EAAAA,OAAMP,IACxB,MAAM,QACF8H,EAAO,mBACPC,GACA/H,EAMJ,OACIe,EAAAA,EAAAA,KAACiH,EAAoB,CAAA/G,UACjBC,EAAAA,EAAAA,MAAA,OACI6B,UAAU,iBACVO,QAASA,KAPjByE,GAOkD,EAAA9G,SAAA,EAE1CC,EAAAA,EAAAA,MAAA,OAAK6B,UAAU,yBAAwB9B,SAAA,CAAC,eACjC6G,EAAQ,mBAEf/G,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,4BAA2B9B,UACtCF,EAAAA,EAAAA,KAACsG,EAAAA,EAAa,UAGH,IClBzBY,GAAa1H,EAAAA,EAAAA,OAAMP,IACrB,MAAM,KACFwC,EAAO,CAAC,EAAC,WACT2B,EAAa,EAAC,SACdC,EAAW,GACXpE,GAEE,MACF2C,EAAK,KACLgB,EAAI,UACJO,GACA1B,EAIE8E,GAAQY,EAAAA,EAAAA,UAAQ,KAClB,MAAMC,EAAkB,IAAIC,IAAIlE,EAAUd,KAAIpB,GAAQA,EAAKqG,WAC3D,MAAO,CACH,CACIxD,KAAM,MACNnB,GAAI4E,EAAAA,EAAMC,OAAOC,WAElBC,MAAMC,KAAKP,GAAiB/E,KAAIiF,IAAO,CACtCxD,KAAMwD,EACN3E,GAAI4E,EAAAA,EAAMC,OAAOC,WAExB,GACF,CAACtE,KAEGyE,EAAiBC,IAAsB9H,EAAAA,EAAAA,UAA2B,QAAlBwG,EAAM,GAAGzC,MAAkB,KAC3EgE,EAAeC,IAAoBhI,EAAAA,EAAAA,UAASoD,GAE7CqD,GAAkBhF,EAAAA,EAAAA,cAAawG,IACjCH,EAAqC,QAAlBtB,EAAM,GAAGzC,MAAkB,IAC9C,MAAMmE,EAAeH,EAAcI,QAC9BjH,GACO+G,IAAazB,EAAM,GAAGzC,MAGf7C,EAAKqG,UAAYU,IAIpCD,EAAiBE,EAAa,GAE/B,CAAC1B,IAEEpF,GAAWC,EAAAA,EAAAA,MACX4F,GAAqBxF,EAAAA,EAAAA,cAAY,KACnCL,EAAS,UAAW,CAChBgH,MAAO,CACH,YAAe5B,EACf,SAAYpD,IAElB,GACH,CAAChC,EAAUoF,EAAOpD,IAGrB,OACIhD,EAAAA,EAAAA,MAACiI,EAAiB,CAAAlI,SAAA,EACdF,EAAAA,EAAAA,KAAC4D,EAAa,CACVhC,MAAOA,EACPgB,KAAMA,KAEV5C,EAAAA,EAAAA,KAACqI,EAAY,CACT9B,MAAOA,EACPC,gBAAiBA,KAErBxG,EAAAA,EAAAA,KAACkD,EAAW,CACRC,UAAW2E,EACX1E,WAAYA,EACZC,SAAUA,KAEdrD,EAAAA,EAAAA,KAACsI,EAAa,CACVvB,QAASa,EACTZ,mBAAoBA,MAER,IAI5BE,EAAWvG,UAAY,CACnBc,KAAMb,IAAAA,OAAiBC,WACvBuC,WAAYxC,IAAAA,OACZyC,SAAUzC,IAAAA,QAGd,U,0BChGA,MAMA,EAN0B/B,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6ECsCpC,GAhCuBQ,EAAAA,EAAAA,OAAK,KACxB,MAAO+I,EAAWC,IAAgBzI,EAAAA,EAAAA,WAAS,IAErC,mBAAE0I,IAAuBC,EAAAA,EAAAA,KAAYP,IAAK,CAC5CM,mBAAoBN,EAAMQ,KAAKF,sBAC/BG,EAAAA,IAEEvH,GAAWC,EAAAA,EAAAA,MAYjB,OAXAsD,EAAAA,EAAAA,YAAU,KACYiE,iBACRxH,GAASyH,EAAAA,EAAAA,OAAqCC,MAAKC,IACrDR,GAAa,EAAM,IACpBS,IACCC,QAAQC,IAAIF,EAAI,GAClB,EAENG,EAAW,GACZ,CAAC/H,KAEAkH,GAAcE,GAAuBA,EAAmBtF,WAKxDnD,EAAAA,EAAAA,KAACqJ,EAAiB,CAAAnJ,UACdF,EAAAA,EAAAA,KAACkH,EAAU,CACPzF,KAAMgH,OANPzI,EAAAA,EAAAA,KAACsJ,EAAAA,EAAQ,GAQI,I,MClC5B,MAMA,GAN0BzK,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6ECwCpC,IAlCuBQ,EAAAA,EAAAA,OAAK,KACxB,MAAO+I,EAAWC,IAAgBzI,EAAAA,EAAAA,WAAS,IAErC,qBAAEwJ,IAAyBb,EAAAA,EAAAA,KAAYP,IAAK,CAC9CoB,qBAAsBpB,EAAMQ,KAAKY,wBACjCX,EAAAA,IAEEvH,GAAWC,EAAAA,EAAAA,MAYjB,OAXAsD,EAAAA,EAAAA,YAAU,KACYiE,iBACRxH,GAASmI,EAAAA,EAAAA,OAAuCT,MAAKC,IACvDR,GAAa,EAAM,IACpBS,IACCC,QAAQC,IAAIF,EAAI,GAClB,EAENG,EAAW,GACZ,CAAC/H,KAEAkH,GAAcgB,GAAyBA,EAAqBpG,WAK5DnD,EAAAA,EAAAA,KAACyJ,GAAiB,CAAAvJ,UACdF,EAAAA,EAAAA,KAACkH,EAAU,CACPzF,KAAM8H,EACNnG,WAAY,EACZC,SAAU,OARXrD,EAAAA,EAAAA,KAACsJ,EAAAA,EAAQ,GAUI,I,OCpC5B,MAMA,GAN4BzK,EAAAA,GAAOC,IAAGC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,6ECwCtC,IAlCyBQ,EAAAA,EAAAA,OAAK,KAC1B,MAAO+I,EAAWC,IAAgBzI,EAAAA,EAAAA,WAAS,IAErC,oBAAE2J,IAAwBhB,EAAAA,EAAAA,KAAYP,IAAK,CAC7CuB,oBAAqBvB,EAAMQ,KAAKe,uBAChCd,EAAAA,IAEEvH,GAAWC,EAAAA,EAAAA,MAYjB,OAXAsD,EAAAA,EAAAA,YAAU,KACYiE,iBACRxH,GAASsI,EAAAA,EAAAA,OAAsCZ,MAAKC,IACtDR,GAAa,EAAM,IACpBS,IACCC,QAAQC,IAAIF,EAAI,GAClB,EAENG,EAAW,GACZ,CAAC/H,KAEAkH,GAAcmB,GAAwBA,EAAoBvG,WAK1DnD,EAAAA,EAAAA,KAAC4J,GAAmB,CAAA1J,UAChBF,EAAAA,EAAAA,KAACkH,EAAU,CACPzF,KAAMiI,EACNtG,WAAY,GACZC,SAAU,OARXrD,EAAAA,EAAAA,KAACsJ,EAAAA,EAAQ,GAUM,I,OCpC9B,MAYA,GAZkCzK,EAAAA,GAAOC,IAAGC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,4L,OCA5C,MA+DA,GA/DkCH,EAAAA,GAAOC,IAAGC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,01CC0B5C,GAzB2B6K,IAAuC,IAADC,EAAAC,EAAA,IAArC,UAAEC,EAAS,QAAE1C,EAAO,SAAE2C,GAAUJ,EACxD,MAAMpH,GAAoB,OAATuH,QAAS,IAATA,GAAoB,QAAXF,EAATE,EAAW5H,iBAAS,IAAA0H,GAAK,QAALC,EAApBD,EAAuB,UAAE,IAAAC,OAAhB,EAATA,EAA2BtH,WAAY,6BAExD,OACIzC,EAAAA,EAAAA,KAACkK,GAAyB,CAAAhK,UACtBC,EAAAA,EAAAA,MAAA,OAAK6B,UAAU,iBAAgB9B,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OACIgC,UAAU,iBACVQ,IAAKC,EACLC,IAAI,mDAER1C,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,uBACf7B,EAAAA,EAAAA,MAAA,OAAK6B,UAAU,mBAAkB9B,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,gBAAe9B,SACzBoH,GAAW,8BAEhBtH,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,oBAAmB9B,SAC7B+J,GAAY,oCAID,ECoCpC,IAlD2BzK,EAAAA,EAAAA,OAAK,KAC5B,MAAO+I,EAAWC,IAAgBzI,EAAAA,EAAAA,WAAS,IAErC,YAAEoK,IAAgBzB,EAAAA,EAAAA,KAAYP,IAAK,CACrCgC,YAAahC,EAAMQ,KAAKwB,eACxBvB,EAAAA,IAEEvH,GAAWC,EAAAA,EAAAA,MAYjB,OAXAsD,EAAAA,EAAAA,YAAU,KACYiE,iBACRxH,GAAS+I,EAAAA,EAAAA,OAA8BrB,MAAKC,IAC9CR,GAAa,EAAM,IACpBS,IACCC,QAAQC,IAAIF,EAAI,GAClB,EAENG,EAAW,GACZ,CAAC/H,KAEAkH,GAAc4B,GAAgBA,EAAYhH,WAK1ChD,EAAAA,EAAAA,MAACkK,GAAyB,CAAAnK,SAAA,EACtBF,EAAAA,EAAAA,KAAC4D,EAAa,CACVhC,MAAkB,OAAXuI,QAAW,IAAXA,OAAW,EAAXA,EAAavI,MACpBgB,KAAiB,OAAXuH,QAAW,IAAXA,OAAW,EAAXA,EAAavH,QAEvB5C,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,gBAAe9B,UAC1BF,EAAAA,EAAAA,KAAC2G,EAAa,CAAAzG,SAEK,OAAXiK,QAAW,IAAXA,OAAW,EAAXA,EAAahH,UAAUd,KAAIpB,IAEnBjB,EAAAA,EAAAA,KAAA,OAAoBgC,UAAU,gBAAe9B,UACzCF,EAAAA,EAAAA,KAACsK,GAAkB,CACfN,UAAW/I,GAAQ,CAAC,EACpBqG,SAAa,OAAJrG,QAAI,IAAJA,OAAI,EAAJA,EAAMqG,UAAW,GAC1B2C,UAAc,OAAJhJ,QAAI,IAAJA,OAAI,EAAJA,EAAMgJ,WAAY,MAJtB,OAAJhJ,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,cAdjC3C,EAAAA,EAAAA,KAACsJ,EAAAA,EAAQ,GA0BY,IChCpC,IAhBa9J,EAAAA,EAAAA,OAAK,KAEVQ,EAAAA,EAAAA,KAAC2B,EAAAA,SAAQ,CAAAzB,UACLC,EAAAA,EAAAA,MAACoK,EAAW,CAAArK,SAAA,EACRF,EAAAA,EAAAA,KAACwK,EAAU,KACXrK,EAAAA,EAAAA,MAAA,OAAK6B,UAAU,cAAa9B,SAAA,EACxBF,EAAAA,EAAAA,KAACyK,EAAc,KACfzK,EAAAA,EAAAA,KAAC0K,GAAc,KACf1K,EAAAA,EAAAA,KAAC2K,GAAgB,KACjB3K,EAAAA,EAAAA,KAAC4K,GAAkB,a","sources":["components/section-item/style/style.js","base-ui/ant-jzh-rate/style.js","base-ui/ant-jzh-rate/index.jsx","components/section-item/index.jsx","views/home/style.js","views/home/childrenComponet/Home-Banner/style.js","views/home/childrenComponet/Home-Banner/HomeBanner.jsx","components/section-list/style/style.js","components/section-list/index.jsx","components/section-header/style/style.js","components/section-header/index.jsx","components/section-all/style/style.js","components/section-cards/style/style.js","components/section-card/style/style.js","components/section-card/index.jsx","base-ui/jzh-scroll-view/style/style.js","base-ui/jzh-scroll-view/index.jsx","components/section-cards/index.jsx","components/section-footer/style/style.js","components/section-footer/index.jsx","components/section-all/index.jsx","views/home/childrenComponet/home-section-one/style/style.js","views/home/childrenComponet/home-section-one/index.jsx","views/home/childrenComponet/home-section-two/style/style.js","views/home/childrenComponet/home-section-two/index.jsx","views/home/childrenComponet/home-section-three/style/style.js","views/home/childrenComponet/home-section-three/index.jsx","views/home/childrenComponet/home-section-long-for/style/style.js","components/section-long-for-item/style/style.js","components/section-long-for-item/index.jsx","views/home/childrenComponet/home-section-long-for/index.jsx","views/home/index.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionItemWrapper = styled.div`\n    width: ${props => props.$avg};\n    padding: 8px;\n    box-sizing: border-box;\n\n    .section-item-inner {\n        width: 100%;\n\n        .section-item-cover {\n            position: relative;\n            box-sizing: border-box;\n            padding: 100% 8px 0;  // 这个时候就创建了一个为正方形的卡片以及宽度\n            border-radius: 4px;\n            overflow: hidden;\n            margin: 10px 0;\n            transition: all 0.5s ease;\n\n            img {\n                position: absolute;\n                left: 0;\n                top: 0;\n                width: 100%;\n                height: 100%;\n                text-align: center;\n                object-fit: cover;\n            }\n\n            @media (max-width: 768px) {\n                .section-item-cover {\n                    box-shadow: 0 4px 8px 0 rgba(77, 76, 76, 0.15);\n                    transform: translate3d(0, 0, -5px);\n                }\n            }\n        }\n\n        .section-item-title {\n            color: ${props => props.$ItemTextTitleColor};\n        }\n\n        .section-item-detail {\n            color: ${props => props.$ItemTextDetailColor};\n            text-overflow: ellipsis;\n        }\n\n        .section-item-price {\n            color: ${props => props.$ItemTextPriceColor};\n        }\n        \n        .section-item-rate {\n        }\n    }\n\n    &:hover {\n        cursor: pointer;\n\n        .section-item-cover {\n            box-shadow: 0 8px 8px 0 rgba(77, 76, 76, 0.2), \n                        0 20px 20px 0 rgba(77, 76, 76, 0.2);\n            transform: translate3d(0, 0 , 10px);\n        }\n    }\n\n    @media (max-width: 768px) {\n        width: 50%\n    }\n    \n    @media (max-width: 420px) {\n        width: 100%;\n    }\n`","import styled from \"styled-components\";\n\nconst AntJzhRateWrapper = styled.div`\n    display: flex;\n    justify-content: space-around;\n    align-content: center;\n    \n    .ant-jzh-rate {\n        color: ${props => props.$ThemeColor}\n    }\n    \n    span {\n        text-align: center;\n    }\n`\n\nexport default AntJzhRateWrapper","import { Rate } from \"antd\";\nimport { memo, useState } from \"react\";\nimport AntJzhRateWrapper from \"./style\"\nimport PropTypes from \"prop-types\";\n\nconst AntJzhRate = memo((props) => {\n    const {\n        allowHalf,\n        ThemeColor,\n        rate,\n        starNum\n    } = props\n\n    const [antRate, setAntRate] = useState(rate)\n\n    return (\n        <>\n            <AntJzhRateWrapper\n                $ThemeColor={ ThemeColor || \"yellow\" }\n            >\n                <Rate\n                    allowHalf={allowHalf || true}\n                    onChange={(num) => setAntRate(num)}\n                    value = {\n                        antRate !== null\n                            ? antRate\n                            : 0\n                    }\n                    star={starNum || 10}\n                    rootClassName=\"ant-jzh-rate\"\n                />\n                {\n                    antRate !== null\n                        ? <span>{ antRate * 2 }</span>\n                        : <span>{ 0 }</span>\n                }\n            </AntJzhRateWrapper>\n        </>\n    )\n})\n\nAntJzhRate.prototype = {\n    allowHalf: PropTypes.bool,\n    ThemeColor: PropTypes.string,\n    rate: PropTypes.number.isRequired,\n    starNum: PropTypes.number,\n}\n\nexport default AntJzhRate","import {Fragment, memo, useCallback} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {SectionItemWrapper} from \"./style/style\";\nimport AntJzhRate from \"../../base-ui/ant-jzh-rate\";\nimport {Carousel} from \"antd\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {changeDetailInfoAction} from \"../../store/modules/detail\";\n\nconst SectionItem = memo((props) => {\n    const {\n        item,\n        avg\n    } = props\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    // eslint-disable-next-line\n    const ToDetailHandle = useCallback((data) => {\n        dispatch(changeDetailInfoAction(data))\n        navigate(\"/detail\")\n        // eslint-disable-next-line\n    }, [item])\n\n    return (\n        <Fragment>\n            <SectionItemWrapper\n                $ItemTextTitleColor={item?.title?.color || \"#46413e\" }\n                $ItemTextDetailColor={item?.detail?.color || \"#675e4e\" }\n                $ItemTextPriceColor={item?.price?.color || \"#be5555\" }\n                $avg={avg}\n            >\n                <div className=\"section-item-inner\">\n                    <Carousel\n                        autoplay\n                        arrows\n                    >\n                        {\n                            item?.imageList.map(imgEl => {\n                                return (\n                                    <div\n                                        className=\"section-item-cover\"\n                                        key={imgEl.id}\n                                        onClick={() => ToDetailHandle(item?.imageList)}\n                                    >\n                                        <img\n                                            src={imgEl?.imageUrl}\n                                            alt=\"图片正在加载...\"\n                                        />\n                                    </div>\n                                )\n                            })\n                        }\n                    </Carousel>\n                    <div className=\"section-item-title\">\n                    {item.title}\n                    </div>\n                    <div className=\"section-item-detail\">\n                        {item.desc.slice(0, 20)}...\n                    </div>\n                    <div className=\"section-item-price\">\n                        ${item.price}/day\n                    </div>\n                    <div className=\"section-item-rate\">\n                        <AntJzhRate\n                            allowHalf={true}\n                            ThemeColor={\"orange\"}\n                            rate={item.rate}\n                            starNum={10}\n                        />\n                    </div>\n                </div>\n            </SectionItemWrapper>\n        </Fragment>\n    )\n})\n\nSectionItem.propTypes = {\n    item: PropTypes.object,\n    avg: PropTypes.string\n}\n\nexport default SectionItem","import styled from \"styled-components\";\n\nconst HomeWrapper = styled.div`\n    height: auto;\n    width: 100%;\n\n    .homeContent {\n        margin: 0 auto;\n        width: 1082px;\n        @media (max-width: 1082px) {\n            width: 100%;\n            padding: 0 16px;\n        }\n    }\n`\n\nexport default HomeWrapper;","import styled from \"styled-components\";\n\nconst BackgroundImage = new URL(\"../../../../assets/images/HomeBanner.png\", import.meta.url).href\n// 使用 require 将图片导入也是可以的呐\n\nconst HomeBannerWrapper = styled.div`\n    width: 100%;\n    height: 530px;\n    background: #938f8f url(${BackgroundImage}) no-repeat center/cover;\n\n    @media (max-width: 768px) {\n        height: 300px; // 移动端高度调整为 300px\n        background: #938f8f url(${BackgroundImage}) no-repeat center/cover;\n    }\n`\n\nexport default HomeBannerWrapper;","import {memo} from \"react\";\nimport HomeBannerWrapper from \"./style\";\n\nconst HomeBanner = memo(() => {\n    return (\n        <>\n            <HomeBannerWrapper />\n        </>\n    )\n})\n\nexport default HomeBanner;","import styled from \"styled-components\"\n\nconst SectionListWrapper = styled.div`\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    margin: 0 -8px;\n`\n\nexport default SectionListWrapper","import { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SectionItem from \"../section-item\";\nimport SectionListWrapper from \"./style/style\";\n\n\nconst SectionList = memo((props) => {\n    const {\n        goodsList = [],\n        elementNum = 9,\n        showRows = 3\n    } = props\n\n    const avg = `${(1 / (elementNum / showRows) * 100).toFixed(2)}%`\n\n    return (\n        <SectionListWrapper>\n            {\n                goodsList?.slice(0, elementNum).map((item) => {\n                    return (\n                        <SectionItem\n                            item={item}\n                            key={item?.id}\n                            avg={avg}\n                        />\n                    )\n                })\n            }\n        </SectionListWrapper>\n    )\n})\n\nSectionItem.propTypes = {\n    goodsList: PropTypes.array.isRequired,\n    elementNum: PropTypes.number,\n    showRows: PropTypes.number\n}\n\nexport default SectionList","import styled from 'styled-components';\n\nexport const SectionHeaderWrapper = styled.div`\n    color: #222;\n    margin-top: 10px;\n    margin-bottom: 20px;\n\n    .title {\n        font-size: 25px;\n        font-weight: 700;\n        margin-bottom: 16px;\n\n        &:hover {\n            cursor: pointer;\n        }\n    }\n\n    .desc {\n        color: #333131;\n        font-size: 20px;\n        font-weight: 500;\n        margin-bottom: 20px;\n    }\n`","import {Fragment, memo} from \"react\";\nimport PropTypes from \"prop-types\"\n\nimport { SectionHeaderWrapper } from \"./style/style\"\n\nconst SectionHeader = memo((props) => {\n    const {\n        title = \"home section title\",\n        desc\n    } = props\n\n    return (\n        <Fragment>\n            <SectionHeaderWrapper>\n                <div className=\"title\">{title}</div>\n                { desc && <div className=\"desc\">{ desc }</div> }\n            </SectionHeaderWrapper>\n        </Fragment>\n    )\n})\n\nSectionHeaderWrapper.propTypes = {\n    title: PropTypes.string,\n    desc: PropTypes.string,\n}\n\nexport default SectionHeader","import styled from \"styled-components\";\n\nconst SectionAllWrapper = styled.div`\n    width: 100%;\n    margin-top: 50px;\n    margin-bottom: 20px;\n`\n\nexport default SectionAllWrapper","import styled from \"styled-components\"\n\nconst SectionCardsWrapper = styled.div`\n    width: 100%;\n    padding-bottom: 20px;\n    border-bottom: 1px solid #4b4949;\n`\n\nexport default SectionCardsWrapper","import styled from 'styled-components';\n\nconst SectionCardWrapper = styled.div`\n    width: 100%;\n    margin-left: -8px;\n\n    .card {\n        text-align: center;\n        white-space: nowrap;\n        color: #13110f;\n        font-size: 16px;\n        font-weight: 600;\n        border: 1px solid #100d0d;\n        border-radius: 4px;\n        box-sizing: border-box;\n        padding: 10px 20px;\n        margin: 0 8px;\n        flex-basis: 120px;\n        flex-shrink: 0;\n        background-color: #468cbe;\n        cursor: pointer;\n    }\n\n    .card.active {\n        background-color: #b73434;\n        color: white;\n        box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    }\n`\n\nexport default SectionCardWrapper;","import {memo} from 'react'\nimport PropTypes from \"prop-types\";\nimport classNames from 'classnames';\n\nimport SectionCardWrapper from './style/style';\n\nconst SectionCard = memo((props) => {\n    const {\n        card = \"\",\n        isActive\n    } = props\n\n    return (\n        <SectionCardWrapper>\n            <div\n                className={classNames(\"card\", {active: isActive})}\n            >\n                {card}\n            </div>\n        </SectionCardWrapper>\n    )\n})\n\nSectionCard.prototype = {\n    card: PropTypes.string.isRequired,\n    isActive: PropTypes.bool\n}\n\nexport default SectionCard","import styled from \"styled-components\";\n\nconst JzhScrollViewWrapper = styled.div`\n    position: relative;\n    \n    .jzh-scroll-slot {\n        overflow: hidden;\n        .jzh-scroll-slot-content {\n            display: flex;\n            flex-wrap: nowrap;\n            transition: transform 0.5s ease;\n        }\n    }\n\n    .jzh-scroll-left-button,\n    .jzh-scroll-right-button {\n        position: absolute;\n        top: 50%;\n        transform: translateY(-50%);\n        cursor: pointer;\n        z-index: 10;\n        font-size: 30px;\n        \n        &:active {\n            box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\n        }\n    }\n    .jzh-scroll-left-button {\n        left: -8px;\n    }\n    .jzh-scroll-right-button {\n        right: -8px;\n    }\n`\n\nexport default JzhScrollViewWrapper;","import {memo, useEffect, useRef, useState} from 'react'\n\nimport JzhScrollViewWrapper from \"./style/style\";\nimport {LeftOutlined, RightOutlined} from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\n\nconst JzhScrollView = memo((props) => {\n    const {\n        children\n    } = props;\n\n    const [\n        showRightBottom,\n        setShowRightBottom\n    ] = useState(false);  // 记录右边按钮是否显示\n    const [\n        showLeftBottom,\n        setShowLeftBottom\n    ] = useState(false);  // 记录左边按钮是否显示\n    const [\n        positionIndex,\n        setPositionIndex\n    ] = useState(0);  // 记录点击按钮后具体需要移动元素的下标值\n\n    // 等待组件渲染完毕后判断组件是否进行渲染\n    // useEffect 是等待组件被渲染完毕后才回调的\n    // 同时依赖于我们的 children 的变化来决定内容是否显示\n    const jzhScrollSlotContentRef = useRef(null);\n    const jzhDistanceRef = useRef(null)\n    useEffect(() => {\n        const jzhScrollWidth = jzhScrollSlotContentRef.current.scrollWidth  // 获取可以滚动的宽度\n        const jzhClientWidth = jzhScrollSlotContentRef.current.clientWidth  // 元素本身占据的宽度\n        const jzhScrollLeft = jzhScrollSlotContentRef.current.scrollLeft;\n        const jzhDistance = jzhScrollWidth - jzhClientWidth\n\n        jzhDistanceRef.current = jzhDistance\n        setShowRightBottom(jzhDistance > 0)\n        setShowLeftBottom(jzhScrollLeft > 0);\n    }, [children]);\n\n\n    // 下面的代码是可以抽离的，就是我们的下面的两个函数代码逻辑十分的重复\n    // 可以使用散列表的思想来封装\n    // 最终的监听移动函数\n    const controlMoveEle = (e, isToRight = true) => {\n        e.preventDefault()\n        const newIndex = isToRight ? positionIndex + 1 : positionIndex - 1;\n        const newCard = jzhScrollSlotContentRef.current.children[newIndex]\n        if (newCard) {\n            const newOffsetLeft = newCard.offsetLeft\n            jzhScrollSlotContentRef.current.style.transform = `translate(-${newOffsetLeft}px)`\n            setPositionIndex(newIndex);\n            setShowLeftBottom(newOffsetLeft > 0)\n            setShowRightBottom(jzhDistanceRef.current > newOffsetLeft)\n        }\n    }\n\n    return (\n        <JzhScrollViewWrapper>\n            {\n                showLeftBottom &&\n                <div\n                    className=\"jzh-scroll-left-button\"\n                    onMouseDown={e => controlMoveEle(e, false)}\n                >\n                    <LeftOutlined />\n                </div>\n            }\n            <div className=\"jzh-scroll-slot\">\n                <div\n                    className=\"jzh-scroll-slot-content\"\n                    ref={jzhScrollSlotContentRef}\n                >\n                    {\n                        children\n                    }\n                </div>\n            </div>\n            {\n                showRightBottom &&\n                <div\n                    className=\"jzh-scroll-right-button\"\n                    onMouseDown={e => controlMoveEle(e, true)}\n                >\n                    <RightOutlined/>\n                </div>\n            }\n        </JzhScrollViewWrapper>\n    )\n})\n\nJzhScrollView.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default JzhScrollView","import { memo, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SectionCardsWrapper from \"./style/style\";\nimport SectionCard from \"../section-card\";\nimport JzhScrollView from \"../../base-ui/jzh-scroll-view\";\n// import {LeftOutlined, RightOutlined} from \"@ant-design/icons\";\n\nconst SectionCards = memo((props) => {\n    const {\n        cards = [],\n        cardClickHandle\n    } = props;\n\n    const [isActive, setIsActive] = useState(0);\n\n    function cardOnclick(index) {\n        setIsActive(index);\n        cardClickHandle(cards[index]?.card);\n    }\n\n    return (\n        <SectionCardsWrapper>\n            <JzhScrollView>\n                {\n                    cards.map((item, index) => (\n                        <div\n                            key={item.id}\n                            onClick={(e) => cardOnclick(index)}\n                        >\n                            <SectionCard\n                                card={item?.card}\n                                isActive={isActive === index}\n                            />\n                        </div>\n                    ))\n                }\n            </JzhScrollView>\n        </SectionCardsWrapper>\n    );\n});\n\nSectionCards.propTypes = {\n    cards: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.number]\n            ).isRequired,\n            card: PropTypes.object.isRequired\n        })\n    ).isRequired,\n    cardClickHandle: PropTypes.func.isRequired\n};\n\nexport default SectionCards;","import styled from 'styled-components';\n\nconst SectionFooterWrapper = styled.div`\n    margin-top: 20px;\n\n    .section-footer {\n        display: inline-flex;\n        align-items: center;\n        border-radius: 5px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        \n        .section-footer-rightArrow {\n            font-size: 16px;\n            margin-left: 10px;\n        }\n\n        &:hover {\n            cursor: pointer;\n        }\n    }\n`\n\nexport default SectionFooterWrapper;","import { memo } from \"react\";\nimport {RightOutlined} from \"@ant-design/icons\";\n\nimport SectionFooterWrapper from \"./style/style\";\nimport PropTypes from \"prop-types\";\n\nconst SectionFooter = memo((props) => {\n    const {\n        content,\n        SectionFooterClick\n    } = props;\n\n    function SectionFooterClickHandle() {\n        SectionFooterClick()\n    }\n\n    return (\n        <SectionFooterWrapper>\n            <div\n                className=\"section-footer\"\n                onClick={() => SectionFooterClickHandle()}\n            >\n                <div className=\"section-footer-content\">\n                    查看{content}全部\n                </div>\n                <div className=\"section-footer-rightArrow\">\n                    <RightOutlined/>\n                </div>\n            </div>\n        </SectionFooterWrapper>\n    )\n})\n\nSectionFooter.propTypes = {\n    content: PropTypes.string.isRequired,\n    SectionFooterClick: PropTypes.func.isRequired\n}\n\nexport default SectionFooter","import {memo, useCallback, useMemo, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {faker} from \"@faker-js/faker\";\nimport {useNavigate} from \"react-router-dom\";\n\nimport SectionList from \"../section-list\";\nimport SectionHeader from \"../section-header\";\nimport SectionAllWrapper from \"./style/style\"\nimport SectionCards from \"../section-cards\";\nimport SectionFooter from \"../section-footer\";\n\nconst SectionAll = memo((props) => {\n    const {\n        data = {},\n        elementNum = 8,\n        showRows = 2\n    } = props\n\n    const {\n        title,\n        desc,\n        goodsList\n    } = data\n\n    // react-hooks/exhaustive-deps\n    // 使用 useMemo 缓存 cards 数组\n    const cards = useMemo(() => {\n        const uniqueAddresses = new Set(goodsList.map(item => item.address));\n        return [\n            {\n                card: \"all\",\n                id: faker.string.uuid(),\n            },\n            ...Array.from(uniqueAddresses).map(address => ({\n                card: address,\n                id: faker.string.uuid(),\n            }))\n        ];\n    }, [goodsList]);\n\n    const [currentCardName, setCurrentCardName] = useState(cards[0].card === \"all\" && \"\" );\n    const [dataListState, setDataListState] = useState(goodsList)\n    // useCallBack 实现解决每次重新加载组件的时候都会创建这个函数实例出来的问题，这个也是性能优化的一点吧\n    const cardClickHandle = useCallback((cardName) => {\n        setCurrentCardName(cards[0].card === \"all\" && \"\")\n        const newDataState = dataListState.filter(\n            (item) => {\n                if (cardName === cards[0].card) {\n                    return true\n                } else {\n                    return item.address === cardName\n                }\n            }\n        )\n        setDataListState(newDataState)\n        // eslint-disable-next-line\n    }, [cards])\n\n    const navigate = useNavigate();\n    const SectionFooterClick = useCallback(() => {\n        navigate(\"/entire\", {\n            state: {\n                \"filterCards\": cards,\n                \"goodList\": goodsList\n            }\n        });\n    }, [navigate, cards, goodsList]);\n\n\n    return (\n        <SectionAllWrapper>\n            <SectionHeader\n                title={title}\n                desc={desc}\n            />\n            <SectionCards\n                cards={cards}\n                cardClickHandle={cardClickHandle}\n            />\n            <SectionList\n                goodsList={dataListState}\n                elementNum={elementNum}\n                showRows={showRows}\n            />\n            <SectionFooter\n                content={currentCardName}\n                SectionFooterClick={SectionFooterClick}\n            />\n        </SectionAllWrapper>\n    )\n})\n\nSectionAll.prototype = {\n    data: PropTypes.object.isRequired,\n    elementNum: PropTypes.number,\n    showRows: PropTypes.number\n}\n\nexport default SectionAll","import styled from \"styled-components\"\n\nconst SectionOneWrapper = styled.div`\n    width: 100%;\n    margin-top: 20px;\n    margin-bottom: 20px;\n`\n\nexport default SectionOneWrapper","import {memo, useState, useEffect} from \"react\";\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\n\nimport SectionAll from \"../../../../components/section-all\";\nimport {LazyPage} from \"../../../../components/app-lazy/lazyPage\";\nimport {fetchHighPriceGoodsInfoDataAction} from \"../../../../store/modules/home\";\nimport SectionOneWrapper from \"./style/style\";\n\nconst HomeSectionOne = memo(() => {\n    const [isLoading, setIsLoading] = useState(true)\n\n    const { HighPriceGoodsInfo } = useSelector(state => ({\n        HighPriceGoodsInfo: state.home.HighPriceGoodsInfo\n    }), shallowEqual)\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        const fetchData = async () => {\n            await dispatch(fetchHighPriceGoodsInfoDataAction()).then(res => {\n                setIsLoading(false)\n            }, err => {\n                console.log(err)\n            })\n        }\n        fetchData()\n    }, [dispatch])\n\n    if (isLoading || !HighPriceGoodsInfo || !HighPriceGoodsInfo.goodsList) {\n        return <LazyPage/>\n    }\n\n    return (\n        <SectionOneWrapper>\n            <SectionAll\n                data={HighPriceGoodsInfo}\n            />\n        </SectionOneWrapper>\n    )\n})\n\nexport default HomeSectionOne","import styled from \"styled-components\"\n\nconst SectionTwoWrapper = styled.div`\n    width: 100%;\n    margin-top: 20px;\n    margin-bottom: 20px;\n`\n\nexport default SectionTwoWrapper","import {memo, useState, useEffect} from \"react\";\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\n\nimport SectionAll from \"../../../../components/section-all\";\nimport {LazyPage} from \"../../../../components/app-lazy/lazyPage\";\nimport {fetchMiddlePriceGoodsInfoDataAction} from \"../../../../store/modules/home\";\nimport SectionTwoWrapper from \"./style/style\";\n\nconst HomeSectionTwo = memo(() => {\n    const [isLoading, setIsLoading] = useState(true)\n\n    const { MiddlePriceGoodsInfo } = useSelector(state => ({\n        MiddlePriceGoodsInfo: state.home.MiddlePriceGoodsInfo\n    }), shallowEqual)\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        const fetchData = async () => {\n            await dispatch(fetchMiddlePriceGoodsInfoDataAction()).then(res => {\n                setIsLoading(false)\n            }, err => {\n                console.log(err)\n            })\n        }\n        fetchData()\n    }, [dispatch])\n\n    if (isLoading || !MiddlePriceGoodsInfo || !MiddlePriceGoodsInfo.goodsList) {\n        return <LazyPage/>\n    }\n\n    return (\n        <SectionTwoWrapper>\n            <SectionAll\n                data={MiddlePriceGoodsInfo}\n                elementNum={9}\n                showRows={3}\n            />\n        </SectionTwoWrapper>\n    )\n})\n\nexport default HomeSectionTwo","import styled from \"styled-components\"\n\nconst SectionThreeWrapper = styled.div`\n    width: 100%;\n    margin-top: 20px;\n    margin-bottom: 20px;\n`\n\nexport default SectionThreeWrapper","import {memo, useState, useEffect} from \"react\";\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\n\nimport SectionAll from \"../../../../components/section-all\";\nimport {LazyPage} from \"../../../../components/app-lazy/lazyPage\";\nimport {fetchLowerPriceGoodsInfoDataAction} from \"../../../../store/modules/home\";\nimport SectionThreeWrapper from \"./style/style\";\n\nconst HomeSectionThree = memo(() => {\n    const [isLoading, setIsLoading] = useState(true)\n\n    const { LowerPriceGoodsInfo } = useSelector(state => ({\n        LowerPriceGoodsInfo: state.home.LowerPriceGoodsInfo\n    }), shallowEqual)\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        const fetchData = async () => {\n            await dispatch(fetchLowerPriceGoodsInfoDataAction()).then(res => {\n                setIsLoading(false)\n            }, err => {\n                console.log(err)\n            })\n        }\n        fetchData()\n    }, [dispatch])\n\n    if (isLoading || !LowerPriceGoodsInfo || !LowerPriceGoodsInfo.goodsList) {\n        return <LazyPage/>\n    }\n\n    return (\n        <SectionThreeWrapper>\n            <SectionAll\n                data={LowerPriceGoodsInfo}\n                elementNum={10}\n                showRows={2}\n            />\n        </SectionThreeWrapper>\n    )\n})\n\nexport default HomeSectionThree","import styled from 'styled-components';\n\nconst HomeSectionLongForWrapper = styled.div`\n    .long-for-list {\n        width: 100%;\n        \n        .long-for-item {\n            flex-shrink: 0;\n            flex-grow: 0;\n            width: 25%\n        }\n    }\n`\n\nexport default HomeSectionLongForWrapper;","import styled from \"styled-components\";\n\nconst SectionLongForItemWrapper = styled.div`\n    width: 100%;\n    margin-left: -4px;\n    background-color: #fff;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    padding:8px;\n\n    .long-for-inner {\n        width: 100%;\n        position: relative;\n        overflow: hidden;\n    }\n\n    .long-for-cover {\n        width: 100%;\n        height: 200px; \n        object-fit: cover; \n        border-radius: 8px 8px 0 0; \n        position: relative; \n        z-index: 1; \n    }\n\n    .long-for-bg-cover {\n        position: absolute;\n        height: 60%; \n        bottom: 0;\n        left: 0;\n        right: 0;\n        width: 100%;\n        background-image: linear-gradient(-180deg, rgba(0,0,0,0) 3%, rgb(0,0,0) 100%);\n        border-radius: 8px 8px 8px 8px; \n        z-index: 2; \n    }\n\n    .long-for-content {\n        position: absolute;\n        bottom: 20px;\n        left: 0;\n        right: 0;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        z-index: 3; \n        pointer-events: none; \n    }\n\n    .long-for-city {\n        font-size: 18px;\n        font-weight: 600;\n        color: #fff;\n        text-align: center; \n    }\n\n    .long-for-category {\n        font-size: 14px;\n        margin-top: 8px;\n        color: #fff;\n        text-align: center; \n    }\n`;\n\nexport default SectionLongForItemWrapper;","import React from \"react\";\nimport SectionLongForItemWrapper from \"./style/style\";\n\nconst SectionLongForItem = ({ goodsItem, address, category }) => {\n    const imageUrl = goodsItem?.imageList?.[0]?.imageUrl || \"/path/to/default/image.jpg\";\n\n    return (\n        <SectionLongForItemWrapper>\n            <div className=\"long-for-inner\">\n                <img\n                    className=\"long-for-cover\"\n                    src={imageUrl}\n                    alt=\"图片正在加载中...\"\n                />\n                <div className=\"long-for-bg-cover\"></div>\n                <div className=\"long-for-content\">\n                    <div className=\"long-for-city\">\n                        {address || \"默认地址\"}\n                    </div>\n                    <div className=\"long-for-category\">\n                        {category || \"默认分类\"}\n                    </div>\n                </div>\n            </div>\n        </SectionLongForItemWrapper>\n    );\n};\n\nexport default SectionLongForItem;","import {memo, useEffect, useState} from 'react';\n\nimport HomeSectionLongForWrapper from \"./style/style\";\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\nimport {fetchLongForInfoDataAction} from \"../../../../store/modules/home\";\nimport {LazyPage} from \"../../../../components/app-lazy/lazyPage\";\nimport SectionHeader from \"../../../../components/section-header\";\nimport SectionLongForItem from \"../../../../components/section-long-for-item\";\nimport JzhScrollView from \"../../../../base-ui/jzh-scroll-view\";\n\nconst HomeSectionLongFor = memo(() => {\n    const [isLoading, setIsLoading] = useState(true)\n\n    const { LongForInfo } = useSelector(state => ({\n        LongForInfo: state.home.LongForInfo\n    }), shallowEqual)\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        const fetchData = async () => {\n            await dispatch(fetchLongForInfoDataAction()).then(res => {\n                setIsLoading(false)\n            }, err => {\n                console.log(err)\n            })\n        }\n        fetchData()\n    }, [dispatch])\n\n    if (isLoading || !LongForInfo || !LongForInfo.goodsList) {\n        return <LazyPage/>\n    }\n\n    return (\n        <HomeSectionLongForWrapper>\n            <SectionHeader\n                title={LongForInfo?.title}\n                desc={LongForInfo?.desc}\n            />\n            <div className=\"long-for-list\">\n                <JzhScrollView>\n                    {\n                        LongForInfo?.goodsList.map(item => {\n                            return (\n                                <div key={item?.id} className=\"long-for-item\">\n                                    <SectionLongForItem\n                                        goodsItem={item || {}}\n                                        address={item?.address || \"\"}\n                                        category={item?.category || \"\"}\n                                    />\n                                </div>\n                            )\n                        })\n                    }\n                </JzhScrollView>\n            </div>\n        </HomeSectionLongForWrapper>\n    )\n})\n\nexport default HomeSectionLongFor;","import {Fragment, memo} from \"react\";\nimport HomeWrapper from \"./style\";\nimport HomeBanner from \"./childrenComponet/Home-Banner/HomeBanner\";\nimport HomeSectionOne from \"./childrenComponet/home-section-one\";\nimport HomeSectionTwo from \"./childrenComponet/home-section-two\";\nimport HomeSectionThree from \"./childrenComponet/home-section-three\";\nimport HomeSectionLongFor from \"./childrenComponet/home-section-long-for\";\n\nconst Home = memo(() => {\n    return (\n        <Fragment>\n            <HomeWrapper>\n                <HomeBanner />\n                <div className=\"homeContent\">\n                    <HomeSectionOne/>\n                    <HomeSectionTwo/>\n                    <HomeSectionThree/>\n                    <HomeSectionLongFor/>\n                </div>\n            </HomeWrapper>\n        </Fragment>\n    )\n})\n\nexport default Home"],"names":["SectionItemWrapper","styled","div","_templateObject","_taggedTemplateLiteral","props","$avg","$ItemTextTitleColor","$ItemTextDetailColor","$ItemTextPriceColor","$ThemeColor","AntJzhRate","memo","allowHalf","ThemeColor","rate","starNum","antRate","setAntRate","useState","_jsx","_Fragment","children","_jsxs","AntJzhRateWrapper","Rate","onChange","num","value","star","rootClassName","prototype","PropTypes","isRequired","_item$title","_item$detail","_item$price","item","avg","navigate","useNavigate","dispatch","useDispatch","ToDetailHandle","useCallback","data","changeDetailInfoAction","Fragment","title","color","detail","price","className","Carousel","autoplay","arrows","imageList","map","imgEl","onClick","src","imageUrl","alt","id","desc","slice","BackgroundImage","URL","href","HomeBannerWrapper","SectionList","goodsList","elementNum","showRows","concat","toFixed","SectionListWrapper","SectionItem","propTypes","SectionHeaderWrapper","SectionHeader","SectionCard","card","isActive","SectionCardWrapper","classNames","active","showRightBottom","setShowRightBottom","showLeftBottom","setShowLeftBottom","positionIndex","setPositionIndex","jzhScrollSlotContentRef","useRef","jzhDistanceRef","useEffect","jzhScrollWidth","current","scrollWidth","jzhClientWidth","clientWidth","jzhScrollLeft","scrollLeft","jzhDistance","controlMoveEle","e","isToRight","arguments","length","undefined","preventDefault","newIndex","newCard","newOffsetLeft","offsetLeft","style","transform","JzhScrollViewWrapper","onMouseDown","LeftOutlined","ref","RightOutlined","cards","cardClickHandle","setIsActive","SectionCardsWrapper","JzhScrollView","index","_cards$index","cardOnclick","content","SectionFooterClick","SectionFooterWrapper","SectionAll","useMemo","uniqueAddresses","Set","address","faker","string","uuid","Array","from","currentCardName","setCurrentCardName","dataListState","setDataListState","cardName","newDataState","filter","state","SectionAllWrapper","SectionCards","SectionFooter","isLoading","setIsLoading","HighPriceGoodsInfo","useSelector","home","shallowEqual","async","fetchHighPriceGoodsInfoDataAction","then","res","err","console","log","fetchData","SectionOneWrapper","LazyPage","MiddlePriceGoodsInfo","fetchMiddlePriceGoodsInfoDataAction","SectionTwoWrapper","LowerPriceGoodsInfo","fetchLowerPriceGoodsInfoDataAction","SectionThreeWrapper","_ref","_goodsItem$imageList","_goodsItem$imageList$","goodsItem","category","SectionLongForItemWrapper","LongForInfo","fetchLongForInfoDataAction","HomeSectionLongForWrapper","SectionLongForItem","HomeWrapper","HomeBanner","HomeSectionOne","HomeSectionTwo","HomeSectionThree","HomeSectionLongFor"],"sourceRoot":""}